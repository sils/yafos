<!DOCTYPE html>
<html dir="ltr" class="client-js" lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<title>Higher Half With GDT - OSDev Wiki</title>
<meta charset="UTF-8">
<meta name="generator" content="MediaWiki 1.18.0">
<link rel="shortcut icon" href="http://wiki.osdev.org/favicon.ico">
<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.osdev.org/opensearch_desc.php" title="OSDev Wiki (en)">
<link rel="EditURI" type="application/rsd+xml" href="http://wiki.osdev.org/api.php?action=rsd">
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="http://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom">
<link rel="stylesheet" href="Higher%20Half%20With%20GDT%20-%20OSDev%20Wiki_files/load.css">
<style type="text/css" media="all">.mw-collapsible-toggle{float:right} li .mw-collapsible-toggle{float:none} .mw-collapsible-toggle-li{list-style:none}

/* cache key: wikidb:resourceloader:filter:minify-css:4:4250852ed2349a0d4d0fc6509a3e7d4c */
</style><style type="text/css" media="all">.js-messagebox{margin:1em 5%;padding:0.5em 2.5%;border:1px solid #ccc;background-color:#fcfcfc;font-size:0.8em}.js-messagebox .js-messagebox-group{margin:1px;padding:0.5em 2.5%;border-bottom:1px solid #ddd}.js-messagebox .js-messagebox-group:last-child{border-bottom:thin none transparent}

/* cache key: wikidb:resourceloader:filter:minify-css:4:8b08bdc91c52a9ffba396dccfb5b473c */
</style><meta name="ResourceLoaderDynamicStyles" content="">
<link rel="stylesheet" href="Higher%20Half%20With%20GDT%20-%20OSDev%20Wiki_files/load_002.css">
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}a.new,#quickbar a.new{color:#ba0000}

/* cache key: wikidb:resourceloader:filter:minify-css:4:c88e2bcd56513749bec09a7e29cb3ffa */
</style>
<script src="Higher%20Half%20With%20GDT%20-%20OSDev%20Wiki_files/load_004.php"></script><script src="Higher%20Half%20With%20GDT%20-%20OSDev%20Wiki_files/load_002.php"></script>
<script>if(window.mw){
	mw.config.set({"wgCanonicalNamespace": "", "wgCanonicalSpecialPageName": false, "wgNamespaceNumber": 0, "wgPageName": "Higher_Half_With_GDT", "wgTitle": "Higher Half With GDT", "wgCurRevisionId": 12774, "wgArticleId": 1942, "wgIsArticle": true, "wgAction": "view", "wgUserName": null, "wgUserGroups": ["*"], "wgCategories": ["Level 2 Tutorials", "Tutorials"], "wgBreakFrames": false, "wgRestrictionEdit": [], "wgRestrictionMove": []});
}
</script><script>if(window.mw){
	mw.loader.load(["mediawiki.page.startup"]);
}
</script><script type="text/javascript" src="Higher%20Half%20With%20GDT%20-%20OSDev%20Wiki_files/load.php"></script>
<style type="text/css">/*<![CDATA[*/
.source-asm {line-height: normal;}
.source-asm li, .source-asm pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for asm
 * CSS class: source-asm, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.asm.source-asm .de1, .asm.source-asm .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.asm.source-asm  {font-family:monospace;}
.asm.source-asm .imp {font-weight: bold; color: red;}
.asm.source-asm li, .asm.source-asm .li1 {font-weight: normal; vertical-align:top;}
.asm.source-asm .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.asm.source-asm .li2 {font-weight: bold; vertical-align:top;}
.asm.source-asm .kw1 {color: #00007f; font-weight: bold;}
.asm.source-asm .kw2 {color: #0000ff; font-weight: bold;}
.asm.source-asm .kw3 {color: #00007f;}
.asm.source-asm .kw4 {color: #000000; font-weight: bold;}
.asm.source-asm .kw5 {color: #000000; font-weight: bold;}
.asm.source-asm .co1 {color: #666666; font-style: italic;}
.asm.source-asm .co2 {color: #adadad; font-style: italic;}
.asm.source-asm .es0 {color: #000099; font-weight: bold;}
.asm.source-asm .br0 {color: #009900; font-weight: bold;}
.asm.source-asm .sy0 {color: #339933;}
.asm.source-asm .st0 {color: #7f007f;}
.asm.source-asm .nu0 {color: #0000ff;}
.asm.source-asm .ln-xtra, .asm.source-asm li.ln-xtra, .asm.source-asm div.ln-xtra {background-color: #ffc;}
.asm.source-asm span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=18000";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #b1b100;}
.c.source-c .kw2 {color: #000000; font-weight: bold;}
.c.source-c .kw3 {color: #000066;}
.c.source-c .kw4 {color: #993333;}
.c.source-c .co1 {color: #666666; font-style: italic;}
.c.source-c .co2 {color: #339933;}
.c.source-c .coMULTI {color: #808080; font-style: italic;}
.c.source-c .es0 {color: #000099; font-weight: bold;}
.c.source-c .es1 {color: #000099; font-weight: bold;}
.c.source-c .es2 {color: #660099; font-weight: bold;}
.c.source-c .es3 {color: #660099; font-weight: bold;}
.c.source-c .es4 {color: #660099; font-weight: bold;}
.c.source-c .es5 {color: #006699; font-weight: bold;}
.c.source-c .br0 {color: #009900;}
.c.source-c .sy0 {color: #339933;}
.c.source-c .st0 {color: #ff0000;}
.c.source-c .nu0 {color: #0000dd;}
.c.source-c .nu6 {color: #208080;}
.c.source-c .nu8 {color: #208080;}
.c.source-c .nu12 {color: #208080;}
.c.source-c .nu16 {color:#800080;}
.c.source-c .nu17 {color:#800080;}
.c.source-c .nu18 {color:#800080;}
.c.source-c .nu19 {color:#800080;}
.c.source-c .me1 {color: #202020;}
.c.source-c .me2 {color: #202020;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=18000";
/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Higher_Half_With_GDT action-view skin-vector">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content">
			<a id="top"></a>
			<div class="js-messagebox" id="mw-js-message" style="display:none;"></div>
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading">Higher Half With GDT</h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
								<!-- tagline -->
				<div id="siteSub">From OSDev Wiki</div>
				<!-- /tagline -->
								<!-- subtitle -->
				<div id="contentSub"></div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav">
					Jump to: <a href="#mw-head">navigation</a>,
					<a href="#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodycontent -->
				<div dir="ltr" class="mw-content-ltr" lang="en"><table style="font-size:95%; line-height:1.5em; padding:0.25em; float:right; margin: 0 0 8px 15px; clear:right; border:1px solid #aaaaaa; background:#eee; text-align:center;;"><tbody><tr><th>Difficulty level</th></tr><tr><td><a href="http://wiki.osdev.org/File:Difficulty_2.png" class="image"><img alt="Difficulty 2.png" src="Higher%20Half%20With%20GDT%20-%20OSDev%20Wiki_files/Difficulty_2.png" height="14" width="46"></a><br>Medium</td></tr></tbody></table>
<table id="toc" class="toc tochidden"><tbody><tr><td><div id="toctitle"><h2>Contents</h2><span class="toctoggle">&nbsp;[<a href="#" class="internal" id="togglelink">show</a>]&nbsp;</span></div>
<ul style="display: none;">
<li class="toclevel-1 tocsection-1"><a href="#Introduction"><span class="tocnumber">1</span> <span class="toctext">Introduction</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#The_assembler_part"><span class="tocnumber">2</span> <span class="toctext">The assembler part</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#The_C_part"><span class="tocnumber">3</span> <span class="toctext">The C part</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#The_linker_script"><span class="tocnumber">4</span> <span class="toctext">The linker script</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#Conclusion"><span class="tocnumber">5</span> <span class="toctext">Conclusion</span></a></li>
</ul>
</td></tr></tbody></table>
<h2> <span class="mw-headline" id="Introduction"> Introduction </span></h2>
<p>In this tutorial we'll write a very simple higher-half kernel using 
TimRobinson's GDT trick. This will allow us to load our kernel at some 
high address (e.g 0xC0000000) without enabling paging. Later, when we 
have done all our "critical" jobs, we'll enable paging and use a 
"normal" GDT.
</p><p>The sources are very well commented and may be compiled with NASM/YASM and GCC.
</p>
<h2> <span class="mw-headline" id="The_assembler_part"> The assembler part </span></h2>
<p>This is our first file, <i>start.asm</i>. Here we define the Multiboot header and some useful functions, such as <tt>gdt_flush</tt>. Once GRUB has loaded the kernel in memory, we use the <tt>lgdt</tt>
 instruction to load the "fake" GDT, that will allow us to jump into our
 kernel. The CPU will add the base 0x40000000 to every function, so it 
will jump to address 0xC0100000 + 0x40000000 = 0x100000.
</p><p>Note the <i>.setup</i> section: the CPU always needs the physical
 address of the GDT, but we are linking all the kernel in the higher 
half. How do we manage this? Simple, just link the GDT within a special 
section with identical virtual and physical addresses.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="asm source-asm"><pre class="de1"><span class="br0">[</span>BITS <span class="nu0">32</span><span class="br0">]</span>       <span class="co1">; 32 bit code</span>
<span class="br0">[</span>section <span class="sy0">.</span>text<span class="br0">]</span> <span class="co1">; keep NASM happy</span>
<span class="br0">[</span>global start<span class="br0">]</span>  <span class="co1">; make 'start' function global</span>
<span class="br0">[</span><span class="kw4">extern</span> kmain<span class="br0">]</span>  <span class="co1">; our C kernel main</span>
&nbsp;
<span class="co1">; Multiboot constants</span>
MULTIBOOT_PAGE_ALIGN	equ <span class="nu0">1</span>&lt;&lt;<span class="nu0">0</span>
MULTIBOOT_MEMORY_INFO	equ <span class="nu0">1</span>&lt;&lt;<span class="nu0">1</span>
MULTIBOOT_HEADER_MAGIC	equ <span class="nu0">0x1BADB002</span>
MULTIBOOT_HEADER_FLAGS	equ MULTIBOOT_PAGE_ALIGN | MULTIBOOT_MEMORY_INFO
MULTIBOOT_CHECKSUM	equ <span class="sy0">-</span><span class="br0">(</span>MULTIBOOT_HEADER_MAGIC <span class="sy0">+</span> MULTIBOOT_HEADER_FLAGS<span class="br0">)</span>
&nbsp;
<span class="co1">; Multiboot header (needed to boot from GRUB)</span>
<span class="kw4">ALIGN</span> <span class="nu0">4</span>
multiboot_header<span class="sy0">:</span>
	<span class="kw4">dd</span> MULTIBOOT_HEADER_MAGIC
	<span class="kw4">dd</span> MULTIBOOT_HEADER_FLAGS
	<span class="kw4">dd</span> MULTIBOOT_CHECKSUM
&nbsp;
<span class="co1">; the kernel entry point</span>
start<span class="sy0">:</span>
	<span class="co1">; here's the trick: we load a GDT with a base address</span>
	<span class="co1">; of 0x40000000 for the code (0x08) and data (0x10) segments</span>
	<span class="kw1">lgdt</span> <span class="br0">[</span>trickgdt<span class="br0">]</span>
	<span class="kw1">mov</span> <span class="kw3">ax</span><span class="sy0">,</span> <span class="nu0">0x10</span>
	<span class="kw1">mov</span> <span class="kw3">ds</span><span class="sy0">,</span> <span class="kw3">ax</span>
	<span class="kw1">mov</span> <span class="kw3">es</span><span class="sy0">,</span> <span class="kw3">ax</span>
	<span class="kw1">mov</span> <span class="kw3">fs</span><span class="sy0">,</span> <span class="kw3">ax</span>
	<span class="kw1">mov</span> <span class="kw3">gs</span><span class="sy0">,</span> <span class="kw3">ax</span>
	<span class="kw1">mov</span> <span class="kw3">ss</span><span class="sy0">,</span> <span class="kw3">ax</span>
&nbsp;
	<span class="co1">; jump to the higher half kernel</span>
	<span class="kw1">jmp</span> <span class="nu0">0x08</span><span class="sy0">:</span>higherhalf
&nbsp;
higherhalf<span class="sy0">:</span>
	<span class="co1">; from now the CPU will translate automatically every address</span>
	<span class="co1">; by adding the base 0x40000000</span>
&nbsp;
	<span class="kw1">mov</span> <span class="kw3">esp</span><span class="sy0">,</span> sys_stack <span class="co1">; set up a new stack for our kernel</span>
&nbsp;
	<span class="kw1">call</span> kmain <span class="co1">; jump to our C kernel&nbsp;;)</span>
&nbsp;
	<span class="co1">; just a simple protection...</span>
	<span class="kw1">jmp</span> $
&nbsp;
<span class="br0">[</span>global gdt_flush<span class="br0">]</span> <span class="co1">; make 'gdt_flush' accessible from C code</span>
<span class="br0">[</span><span class="kw4">extern</span> gp<span class="br0">]</span>        <span class="co1">; tells the assembler to look at C code for 'gp'</span>
&nbsp;
<span class="co1">; this function does the same thing of the 'start' one, this time with</span>
<span class="co1">; the real GDT</span>
gdt_flush<span class="sy0">:</span>
	<span class="kw1">lgdt</span> <span class="br0">[</span>gp<span class="br0">]</span>
	<span class="kw1">mov</span> <span class="kw3">ax</span><span class="sy0">,</span> <span class="nu0">0x10</span>
	<span class="kw1">mov</span> <span class="kw3">ds</span><span class="sy0">,</span> <span class="kw3">ax</span>
	<span class="kw1">mov</span> <span class="kw3">es</span><span class="sy0">,</span> <span class="kw3">ax</span>
	<span class="kw1">mov</span> <span class="kw3">fs</span><span class="sy0">,</span> <span class="kw3">ax</span>
	<span class="kw1">mov</span> <span class="kw3">gs</span><span class="sy0">,</span> <span class="kw3">ax</span>
	<span class="kw1">mov</span> <span class="kw3">ss</span><span class="sy0">,</span> <span class="kw3">ax</span>
	<span class="kw1">jmp</span> <span class="nu0">0x08</span><span class="sy0">:</span>flush2
&nbsp;
flush2<span class="sy0">:</span>
	<span class="kw1">ret</span>
&nbsp;
<span class="br0">[</span>section <span class="sy0">.</span>setup<span class="br0">]</span> <span class="co1">; tells the assembler to include this data in the '.setup' section</span>
&nbsp;
trickgdt<span class="sy0">:</span>
	<span class="kw4">dw</span> gdt_end <span class="sy0">-</span> gdt <span class="sy0">-</span> <span class="nu0">1</span> <span class="co1">; size of the GDT</span>
	<span class="kw4">dd</span> gdt <span class="co1">; linear address of GDT</span>
&nbsp;
gdt<span class="sy0">:</span>
	<span class="kw4">dd</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">0</span>							<span class="co1">; null gate</span>
	<span class="kw4">db</span> <span class="nu0">0xFF</span><span class="sy0">,</span> <span class="nu0">0xFF</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">10011010b</span><span class="sy0">,</span> <span class="nu0">11001111b</span><span class="sy0">,</span> <span class="nu0">0x40</span>	<span class="co1">; code selector 0x08: base 0x40000000, limit 0xFFFFFFFF, type 0x9A, granularity 0xCF</span>
	<span class="kw4">db</span> <span class="nu0">0xFF</span><span class="sy0">,</span> <span class="nu0">0xFF</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">10010010b</span><span class="sy0">,</span> <span class="nu0">11001111b</span><span class="sy0">,</span> <span class="nu0">0x40</span>	<span class="co1">; data selector 0x10: base 0x40000000, limit 0xFFFFFFFF, type 0x92, granularity 0xCF</span>
&nbsp;
gdt_end<span class="sy0">:</span>
&nbsp;
<span class="br0">[</span>section <span class="sy0">.</span>bss<span class="br0">]</span>
&nbsp;
resb <span class="nu0">0x1000</span>
sys_stack<span class="sy0">:</span>
	<span class="co1">; our kernel stack</span></pre></div></div>
<h2> <span class="mw-headline" id="The_C_part"> The C part </span></h2>
<p>At this point the CPU will be executing our <tt>kmain</tt> function. For this tutorial it will be very small and easy: just call some functions and print a message.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co1">// We declare a pointer to the VGA array and its attributes</span>
<span class="kw4">unsigned</span> <span class="kw4">short</span> <span class="sy0">*</span>video <span class="sy0">=</span> <span class="br0">(</span><span class="kw4">unsigned</span> <span class="kw4">short</span> <span class="sy0">*</span><span class="br0">)</span><span class="nu12">0xB8000</span><span class="sy0">;</span> <span class="co1">// We could also use the virtual address 0xC00B8000</span>
<span class="kw4">unsigned</span> <span class="kw4">char</span> attrib <span class="sy0">=</span> <span class="nu12">0xF</span><span class="sy0">;</span> <span class="co1">// White text on black background</span>
&nbsp;
<span class="co1">// Extern functions</span>
<span class="kw4">void</span> gdt_install<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
<span class="kw4">void</span> init_paging<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
<span class="co1">// Clears the screen</span>
<span class="kw4">void</span> cls<span class="br0">(</span><span class="br0">)</span>
<span class="br0">{</span>
	<span class="kw4">int</span> i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
&nbsp;
	<span class="kw1">for</span> <span class="br0">(</span>i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> <span class="nu0">80</span> <span class="sy0">*</span> <span class="nu0">25</span><span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">)</span>
		video<span class="br0">[</span>i<span class="br0">]</span> <span class="sy0">=</span> <span class="br0">(</span>attrib <span class="sy0">&lt;&lt;</span> <span class="nu0">8</span><span class="br0">)</span> <span class="sy0">|</span> <span class="nu0">0</span><span class="sy0">;</span>
<span class="br0">}</span>
&nbsp;
<span class="co1">// Prints the welcome message&nbsp;;)</span>
<span class="kw4">void</span> helloworld<span class="br0">(</span><span class="br0">)</span>
<span class="br0">{</span>
	<span class="kw4">char</span> msg<span class="br0">[</span><span class="br0">]</span> <span class="sy0">=</span> <span class="st0">"Hello, World!"</span><span class="sy0">;</span>
	<span class="kw4">int</span> i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
&nbsp;
	<span class="kw1">for</span> <span class="br0">(</span>i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> msg<span class="br0">[</span>i<span class="br0">]</span> <span class="sy0">!=</span> <span class="st0">'<span class="es5">\0</span>'</span><span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">)</span>
		video<span class="br0">[</span>i<span class="br0">]</span> <span class="sy0">=</span> <span class="br0">(</span>attrib <span class="sy0">&lt;&lt;</span> <span class="nu0">8</span><span class="br0">)</span> <span class="sy0">|</span> msg<span class="br0">[</span>i<span class="br0">]</span><span class="sy0">;</span>
<span class="br0">}</span>
&nbsp;
<span class="co1">// Our kernel's first function: kmain</span>
<span class="kw4">void</span> kmain<span class="br0">(</span><span class="br0">)</span>
<span class="br0">{</span>
	<span class="co1">// FIRST enable paging and THEN load the real GDT!</span>
	init_paging<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
	gdt_install<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
	<span class="co1">// We clear the screen and print our welcome message</span>
	cls<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
	helloworld<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
	<span class="co1">// Hang up the computer</span>
	<span class="kw1">for</span> <span class="br0">(</span><span class="sy0">;;</span><span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span></pre></div></div>
<p>Note that you <b>must</b> enable paging before loading the new GDT as
 the CPU, once loaded the GDT with 0x0 as base address, will be still 
using virtual addresses and if paging isn't enabled... <a href="http://wiki.osdev.org/Triple_Fault" title="Triple Fault">triple fault</a>!
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co1">// Declare the page directory and a page table, both 4kb-aligned</span>
<span class="kw4">unsigned</span> <span class="kw4">long</span> kernelpagedir<span class="br0">[</span><span class="nu0">1024</span><span class="br0">]</span> __attribute__ <span class="br0">(</span><span class="br0">(</span>aligned <span class="br0">(</span><span class="nu0">4096</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span>
<span class="kw4">unsigned</span> <span class="kw4">long</span> lowpagetable<span class="br0">[</span><span class="nu0">1024</span><span class="br0">]</span> __attribute__ <span class="br0">(</span><span class="br0">(</span>aligned <span class="br0">(</span><span class="nu0">4096</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
<span class="co1">// This function fills the page directory and the page table,</span>
<span class="co1">// then enables paging by putting the address of the page directory</span>
<span class="co1">// into the CR3 register and setting the 31st bit into the CR0 one</span>
<span class="kw4">void</span> init_paging<span class="br0">(</span><span class="br0">)</span>
<span class="br0">{</span>
	<span class="co1">// Pointers to the page directory and the page table</span>
	<span class="kw4">void</span> <span class="sy0">*</span>kernelpagedirPtr <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
	<span class="kw4">void</span> <span class="sy0">*</span>lowpagetablePtr <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
	<span class="kw4">int</span> k <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
&nbsp;
	kernelpagedirPtr <span class="sy0">=</span> <span class="br0">(</span><span class="kw4">char</span> <span class="sy0">*</span><span class="br0">)</span>kernelpagedir <span class="sy0">+</span> <span class="nu12">0x40000000</span><span class="sy0">;</span>	<span class="co1">// Translate the page directory from</span>
								<span class="co1">// virtual address to physical address</span>
	lowpagetablePtr <span class="sy0">=</span> <span class="br0">(</span><span class="kw4">char</span> <span class="sy0">*</span><span class="br0">)</span>lowpagetable <span class="sy0">+</span> <span class="nu12">0x40000000</span><span class="sy0">;</span>	<span class="co1">// Same for the page table</span>
&nbsp;
	<span class="co1">// Counts from 0 to 1023 to...</span>
	<span class="kw1">for</span> <span class="br0">(</span>k <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> k <span class="sy0">&lt;</span> <span class="nu0">1024</span><span class="sy0">;</span> k<span class="sy0">++</span><span class="br0">)</span>
	<span class="br0">{</span>
		lowpagetable<span class="br0">[</span>k<span class="br0">]</span> <span class="sy0">=</span> <span class="br0">(</span>k <span class="sy0">*</span> <span class="nu0">4096</span><span class="br0">)</span> <span class="sy0">|</span> <span class="nu12">0x3</span><span class="sy0">;</span>	<span class="co1">// ...map the first 4MB of memory into the page table...</span>
		kernelpagedir<span class="br0">[</span>k<span class="br0">]</span> <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>			<span class="co1">// ...and clear the page directory entries</span>
	<span class="br0">}</span>
&nbsp;
	<span class="co1">// Fills the addresses 0...4MB and 3072MB...3076MB of the page directory</span>
	<span class="co1">// with the same page table</span>
&nbsp;
	kernelpagedir<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span> <span class="sy0">=</span> <span class="br0">(</span><span class="kw4">unsigned</span> <span class="kw4">long</span><span class="br0">)</span>lowpagetablePtr <span class="sy0">|</span> <span class="nu12">0x3</span><span class="sy0">;</span>
	kernelpagedir<span class="br0">[</span><span class="nu0">768</span><span class="br0">]</span> <span class="sy0">=</span> <span class="br0">(</span><span class="kw4">unsigned</span> <span class="kw4">long</span><span class="br0">)</span>lowpagetablePtr <span class="sy0">|</span> <span class="nu12">0x3</span><span class="sy0">;</span>
&nbsp;
	<span class="co1">// Copies the address of the page directory into the CR3 register and, finally, enables paging!</span>
&nbsp;
	asm <span class="kw4">volatile</span> <span class="br0">(</span>	<span class="st0">"mov&nbsp;%0,&nbsp;%%eax<span class="es1">\n</span>"</span>
			<span class="st0">"mov&nbsp;%%eax,&nbsp;%%cr3<span class="es1">\n</span>"</span>
			<span class="st0">"mov&nbsp;%%cr0,&nbsp;%%eax<span class="es1">\n</span>"</span>
			<span class="st0">"orl $0x80000000,&nbsp;%%eax<span class="es1">\n</span>"</span>
			<span class="st0">"mov&nbsp;%%eax,&nbsp;%%cr0<span class="es1">\n</span>"</span> <span class="sy0">::</span> <span class="st0">"m"</span> <span class="br0">(</span>kernelpagedirPtr<span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span></pre></div></div>
<p>And here is the <tt>gdt_install</tt> function. I think it doesn't need any explanation as it has been taken from <a rel="nofollow" class="external text" href="http://osdever.net/bkerndev/Docs/basickernel.htm">Bran's Kernel Development Tutorial</a>, so read that if you need more information.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co1">// Defines the structures of a GDT entry and of a GDT pointer</span>
&nbsp;
<span class="kw4">struct</span> gdt_entry
<span class="br0">{</span>
	<span class="kw4">unsigned</span> <span class="kw4">short</span> limit_low<span class="sy0">;</span>
	<span class="kw4">unsigned</span> <span class="kw4">short</span> base_low<span class="sy0">;</span>
	<span class="kw4">unsigned</span> <span class="kw4">char</span> base_middle<span class="sy0">;</span>
	<span class="kw4">unsigned</span> <span class="kw4">char</span> access<span class="sy0">;</span>
	<span class="kw4">unsigned</span> <span class="kw4">char</span> granularity<span class="sy0">;</span>
	<span class="kw4">unsigned</span> <span class="kw4">char</span> base_high<span class="sy0">;</span>
<span class="br0">}</span> __attribute__<span class="br0">(</span><span class="br0">(</span>packed<span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
<span class="kw4">struct</span> gdt_ptr
<span class="br0">{</span>
	<span class="kw4">unsigned</span> <span class="kw4">short</span> limit<span class="sy0">;</span>
	<span class="kw4">unsigned</span> <span class="kw4">int</span> base<span class="sy0">;</span>
<span class="br0">}</span> __attribute__<span class="br0">(</span><span class="br0">(</span>packed<span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
<span class="co1">// We'll need at least 3 entries in our GDT...</span>
&nbsp;
<span class="kw4">struct</span> gdt_entry gdt<span class="br0">[</span><span class="nu0">3</span><span class="br0">]</span><span class="sy0">;</span>
<span class="kw4">struct</span> gdt_ptr gp<span class="sy0">;</span>
&nbsp;
<span class="co1">// Extern assembler function</span>
<span class="kw4">void</span> gdt_flush<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
<span class="co1">// Very simple: fills a GDT entry using the parameters</span>
<span class="kw4">void</span> gdt_set_gate<span class="br0">(</span><span class="kw4">int</span> num<span class="sy0">,</span> <span class="kw4">unsigned</span> <span class="kw4">long</span> base<span class="sy0">,</span> <span class="kw4">unsigned</span> <span class="kw4">long</span> limit<span class="sy0">,</span> <span class="kw4">unsigned</span> <span class="kw4">char</span> access<span class="sy0">,</span> <span class="kw4">unsigned</span> <span class="kw4">char</span> gran<span class="br0">)</span>
<span class="br0">{</span>
	gdt<span class="br0">[</span>num<span class="br0">]</span>.<span class="me1">base_low</span> <span class="sy0">=</span> <span class="br0">(</span>base <span class="sy0">&amp;</span> <span class="nu12">0xFFFF</span><span class="br0">)</span><span class="sy0">;</span>
	gdt<span class="br0">[</span>num<span class="br0">]</span>.<span class="me1">base_middle</span> <span class="sy0">=</span> <span class="br0">(</span>base <span class="sy0">&gt;&gt;</span> <span class="nu0">16</span><span class="br0">)</span> <span class="sy0">&amp;</span> <span class="nu12">0xFF</span><span class="sy0">;</span>
	gdt<span class="br0">[</span>num<span class="br0">]</span>.<span class="me1">base_high</span> <span class="sy0">=</span> <span class="br0">(</span>base <span class="sy0">&gt;&gt;</span> <span class="nu0">24</span><span class="br0">)</span> <span class="sy0">&amp;</span> <span class="nu12">0xFF</span><span class="sy0">;</span>
&nbsp;
	gdt<span class="br0">[</span>num<span class="br0">]</span>.<span class="me1">limit_low</span> <span class="sy0">=</span> <span class="br0">(</span>limit <span class="sy0">&amp;</span> <span class="nu12">0xFFFF</span><span class="br0">)</span><span class="sy0">;</span>
	gdt<span class="br0">[</span>num<span class="br0">]</span>.<span class="me1">granularity</span> <span class="sy0">=</span> <span class="br0">(</span><span class="br0">(</span>limit <span class="sy0">&gt;&gt;</span> <span class="nu0">16</span><span class="br0">)</span> <span class="sy0">&amp;</span> <span class="nu12">0x0F</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
	gdt<span class="br0">[</span>num<span class="br0">]</span>.<span class="me1">granularity</span> <span class="sy0">|=</span> <span class="br0">(</span>gran <span class="sy0">&amp;</span> <span class="nu12">0xF0</span><span class="br0">)</span><span class="sy0">;</span>
	gdt<span class="br0">[</span>num<span class="br0">]</span>.<span class="me1">access</span> <span class="sy0">=</span> access<span class="sy0">;</span>
<span class="br0">}</span>
&nbsp;
<span class="co1">// Sets our 3 gates and installs the real GDT through the assembler function</span>
<span class="kw4">void</span> gdt_install<span class="br0">(</span><span class="br0">)</span>
<span class="br0">{</span>
	gp.<span class="me1">limit</span> <span class="sy0">=</span> <span class="br0">(</span><span class="kw4">sizeof</span><span class="br0">(</span><span class="kw4">struct</span> gdt_entry<span class="br0">)</span> <span class="sy0">*</span> <span class="nu0">3</span><span class="br0">)</span> <span class="sy0">-</span> <span class="nu0">1</span><span class="sy0">;</span>
	gp.<span class="me1">base</span> <span class="sy0">=</span> <span class="br0">(</span><span class="kw4">unsigned</span> <span class="kw4">int</span><span class="br0">)</span><span class="sy0">&amp;</span>gdt<span class="sy0">;</span>
&nbsp;
	gdt_set_gate<span class="br0">(</span><span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">0</span><span class="br0">)</span><span class="sy0">;</span>
	gdt_set_gate<span class="br0">(</span><span class="nu0">1</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu12">0xFFFFFFFF</span><span class="sy0">,</span> <span class="nu12">0x9A</span><span class="sy0">,</span> <span class="nu12">0xCF</span><span class="br0">)</span><span class="sy0">;</span>
	gdt_set_gate<span class="br0">(</span><span class="nu0">2</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu12">0xFFFFFFFF</span><span class="sy0">,</span> <span class="nu12">0x92</span><span class="sy0">,</span> <span class="nu12">0xCF</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
	gdt_flush<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span></pre></div></div>
<h2> <span class="mw-headline" id="The_linker_script"> The linker script </span></h2>
<p>Our last file is the linker script. Let's give a look at it:
</p>
<pre>OUTPUT_FORMAT("elf32-i386")
ENTRY(start)

SECTIONS
{
	. = 0x100000;

	.setup&nbsp;:
	{
		*(.setup)
	}

	. += 0xC0000000;

	.text&nbsp;: AT(ADDR(.text) - 0xC0000000)
	{
		*(.text)
	}

	.data ALIGN (4096)&nbsp;: AT(ADDR(.data) - 0xC0000000)
	{
		*(.data)
		*(.rodata*)
	}

	.bss ALIGN (4096)&nbsp;: AT(ADDR(.bss) - 0xC0000000)
	{
		*(COMMON*)
		*(.bss*)
	}
}
</pre>
<p>As you can see, we link the <i>.setup</i> section to the lower half (0x100000) and the whole kernel to the higher half (0xC0100000). A simple and elegant solution!
</p>
<h2> <span class="mw-headline" id="Conclusion"> Conclusion </span></h2>
<p>I hope this tutorial will help you writing your own higher half kernel. For any question please post on the forum!
</p>
<!-- 
NewPP limit report
Preprocessor node count: 160/1000000
Post-expand include size: 342/2097152 bytes
Template argument size: 52/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:1942-0!*!0!!en!2!* and timestamp 20130614070654 -->
</div>				<!-- /bodycontent -->
								<!-- printfooter -->
				<div class="printfooter">
				Retrieved from "<a href="http://wiki.osdev.org/index.php?title=Higher_Half_With_GDT&amp;oldid=12774">http://wiki.osdev.org/index.php?title=Higher_Half_With_GDT&amp;oldid=12774</a>"				</div>
				<!-- /printfooter -->
												<!-- catlinks -->
				<div id="catlinks" class="catlinks"><div id="mw-normal-catlinks"><a href="http://wiki.osdev.org/Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="http://wiki.osdev.org/Category:Level_2_Tutorials" title="Category:Level 2 Tutorials">Level 2 Tutorials</a></li><li><a href="http://wiki.osdev.org/Category:Tutorials" title="Category:Tutorials">Tutorials</a></li></ul></div></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
				<!-- debughtml -->
								<!-- /debughtml -->
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<!-- header -->
		<div id="mw-head" class="noprint">
			
<!-- 0 -->
<div id="p-personal" class="">
	<h5>Personal tools</h5>
	<ul>
		<li id="pt-login"><a href="http://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Higher_Half_With_GDT" title="You are encouraged to log in; however, it is not mandatory [alt-shift-o]" accesskey="o">Log in</a></li>
	</ul>
</div>

<!-- /0 -->
			<div id="left-navigation">
				
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li id="ca-nstab-main" class="selected"><span><a href="http://wiki.osdev.org/Higher_Half_With_GDT" title="View the content page [alt-shift-c]" accesskey="c">Page</a></span></li>
					<li id="ca-talk"><span><a href="http://wiki.osdev.org/Talk:Higher_Half_With_GDT" title="Discussion about the content page [alt-shift-t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
		<h5><span>Variants</span><a href="#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
			</div>
			<div id="right-navigation">
				
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="http://wiki.osdev.org/Higher_Half_With_GDT">Read</a></span></li>
					<li id="ca-viewsource"><span><a href="http://wiki.osdev.org/index.php?title=Higher_Half_With_GDT&amp;action=edit" title="This page is protected.
You can view its source [alt-shift-e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://wiki.osdev.org/index.php?title=Higher_Half_With_GDT&amp;action=history" title="Past revisions of this page [alt-shift-h]" accesskey="h">View history</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="/index.php" id="searchform">
		<input name="title" value="Special:Search" type="hidden">
				<input name="search" title="Search OSDev Wiki [alt-shift-f]" accesskey="f" id="searchInput" type="search">		<input name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" type="submit">		<input name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" type="submit">			</form>
</div>

<!-- /2 -->
			</div>
		</div>
		<!-- /header -->
		<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo"><a style="background-image: url(/skins/common/images/osdev.png);" href="http://wiki.osdev.org/Main_Page" title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id="p-navigation">
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="http://wiki.osdev.org/Main_Page" title="Visit the main page [alt-shift-z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="http://wiki.osdev.org/Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="http://wiki.osdev.org/Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="http://wiki.osdev.org/Special:Random" title="Load a random page [alt-shift-x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id="p-about">
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="http://wiki.osdev.org/OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="http://wiki.osdev.org/OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="http://wiki.osdev.org/OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="http://wiki.osdev.org/Special:RecentChanges" title="A list of recent changes in the wiki [alt-shift-r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id="p-tb">
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://wiki.osdev.org/Special:WhatLinksHere/Higher_Half_With_GDT" title="A list of all wiki pages that link here [alt-shift-j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://wiki.osdev.org/Special:RecentChangesLinked/Higher_Half_With_GDT" title="Recent changes in pages linked from this page [alt-shift-k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="http://wiki.osdev.org/Special:SpecialPages" title="A list of all special pages [alt-shift-q]" accesskey="q">Special pages</a></li>
			<li><a href="http://wiki.osdev.org/index.php?title=Higher_Half_With_GDT&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="http://wiki.osdev.org/index.php?title=Higher_Half_With_GDT&amp;oldid=12774" title="Permanent link to this revision of the page">Permanent link</a></li>
		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 21 February 2012, at 15:10.</li>
											<li id="footer-info-viewcount">This page has been accessed 21,550 times.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="http://wiki.osdev.org/OSDev_Wiki:Privacy_policy" title="OSDev Wiki:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="http://wiki.osdev.org/OSDev_Wiki:About" title="OSDev Wiki:About">About OSDev Wiki</a></li>
											<li id="footer-places-disclaimer"><a href="http://wiki.osdev.org/OSDev_Wiki:General_disclaimer" title="OSDev Wiki:General disclaimer">Disclaimers</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="Higher%20Half%20With%20GDT%20-%20OSDev%20Wiki_files/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" height="31" width="88"></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<!-- fixalpha -->
		<script type="text/javascript"> if ( window.isMSIE55 ) fixalpha(); </script>
		<!-- /fixalpha -->
		<script src="Higher%20Half%20With%20GDT%20-%20OSDev%20Wiki_files/load_006.php"></script>
<script>if(window.mw){
	mw.loader.load(["mediawiki.user", "mediawiki.util", "mediawiki.page.ready", "mediawiki.legacy.wikibits", "mediawiki.legacy.ajax"]);
}
</script><script type="text/javascript" src="Higher%20Half%20With%20GDT%20-%20OSDev%20Wiki_files/load_003.php"></script>
<script src="Higher%20Half%20With%20GDT%20-%20OSDev%20Wiki_files/load_005.php"></script>
<script>if(window.mw){
	mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,
	"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;mw.user.tokens.set({"editToken":"+\\","watchToken":false});;mw.loader.state({"user.options":"ready","user.tokens":"ready"});
	
	/* cache key: wikidb:resourceloader:filter:minify-js:4:19a4b18a9ac79a6b8c60b24af4668814 */
}
</script><!-- Served in 0.061 secs. -->
	

</body></html>