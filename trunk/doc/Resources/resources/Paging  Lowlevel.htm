<!DOCTYPE html>
<html class="client-firefox client-firefox-2 client-gecko client-linux" dir="ltr" lang="de"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Paging – Lowlevel</title>
<meta name="generator" content="MediaWiki 1.17.2">
<link rel="shortcut icon" href="http://www.lowlevel.eu/Favicon.png">
<link rel="search" type="application/opensearchdescription+xml" href="http://www.lowlevel.eu/w/opensearch_desc.php" title="Lowlevel (de)">
<link rel="EditURI" type="application/rsd+xml" href="http://www.lowlevel.eu/w/api.php?action=rsd">
<link title="Creative Commons" type="application/rdf+xml" href="http://www.lowlevel.eu/w/index.php?title=Paging&amp;action=creativecommons" rel="meta">
<link rel="copyright" href="http://creativecommons.org/licenses/by-nc-sa/3.0/de/">
<link rel="alternate" type="application/atom+xml" title="Atom-Feed für „Lowlevel“" href="http://www.lowlevel.eu/w/index.php?title=Spezial:Letzte_%C3%84nderungen&amp;feed=atom">
<link rel="stylesheet" href="Paging%20%13%20Lowlevel_files/load_002.css">
<link rel="stylesheet" href="Paging%20%13%20Lowlevel_files/main.css" media="screen">
<!--[if lt IE 5.5000]><link rel="stylesheet" href="/w/skins/monobook/IE50Fixes.css?301" media="screen" /><![endif]-->
<!--[if IE 5.5000]><link rel="stylesheet" href="/w/skins/monobook/IE55Fixes.css?301" media="screen" /><![endif]-->
<!--[if IE 6]><link rel="stylesheet" href="/w/skins/monobook/IE60Fixes.css?301" media="screen" /><![endif]-->
<!--[if IE 7]><link rel="stylesheet" href="/w/skins/monobook/IE70Fixes.css?301" media="screen" /><![endif]--><meta name="ResourceLoaderDynamicStyles" content=""><link rel="stylesheet" href="Paging%20%13%20Lowlevel_files/load.css">
<link rel="stylesheet" href="Paging%20%13%20Lowlevel_files/load.css">
<link rel="stylesheet" href="Paging%20%13%20Lowlevel_files/load.css">

<link href="Paging%20%13%20Lowlevel_files/FF2Fixes.css" rel="stylesheet" type="text/css"></head>
<body class="mediawiki ltr capitalize-all-nouns ns-0 ns-subject page-Paging skin-monobook">
<div id="globalWrapper">
<div id="column-content"><div id="content">
	<a id="top"></a>
	
	<h1 id="firstHeading" class="firstHeading">Paging</h1>
	<div id="bodyContent">
		<div id="siteSub">Aus Lowlevel</div>
		<div id="contentSub"></div>
		<div id="jump-to-nav">Wechseln zu: <a href="#column-one">Navigation</a>, <a href="#searchInput">Suche</a></div>
		<!-- start content -->
<p>Das <b>Paging</b> ist ein Mechanismus, der auf vielen Architekturen 
zum Einsatz kommt, um virtuellen Speicher zur Verfügung zu stellen. 
Virtueller Speicher bedeutet, dass auf dem Prozessor ausgeführte 
Programme nicht mehr direkt mit Speicheradressen arbeiten, die sich 
direkt auf den physisch als Hardware vorhandenen RAM beziehen, sondern 
eine Abstraktionsschicht eingeführt wird.
</p><p>Durch den Einsatz von virtuellem Speicher werden Programme 
unabhängig davon, an welcher physischen Speicheradresse sie laufen. 
Dadurch kann vor allem das Problem der Speicherfragmentierung gelöst 
werden, da Speicherbereiche nicht mehr physisch zusammenhängend sein 
müssen, um Programmen zusammenhängend zu erscheinen.
</p><p>Durch das Paging lassen sich außerdem weitere Features, wie z.&nbsp;B. <a href="http://www.lowlevel.eu/wiki/Swapping" title="Swapping">Swapping</a>,
 leichter implementieren. Auch ist durch Paging Speicherschutz 
gewährleistet, da jeder Prozess einen eigenen virtuellen Adressraum (<i>Speicherkontext</i>) zugeordnet bekommen kann und somit von den anderen Prozessen abgeschirmt ist.
</p>
<table id="toc" class="toc"><tbody><tr><td><div id="toctitle"><h2>Inhaltsverzeichnis</h2> <span class="toctoggle">[<a href="#" class="internal" id="togglelink">Verbergen</a>]</span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Funktionsweise"><span class="tocnumber">1</span> <span class="toctext">Funktionsweise</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Einschalten_des_Paging-Mechanismus"><span class="tocnumber">2</span> <span class="toctext">Einschalten des Paging-Mechanismus</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Page-Directory"><span class="tocnumber">3</span> <span class="toctext">Page-Directory</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Page_Tables"><span class="tocnumber">4</span> <span class="toctext">Page Tables</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#Translation_Lookaside_Buffer"><span class="tocnumber">5</span> <span class="toctext">Translation Lookaside Buffer</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="#Speicher_mappen"><span class="tocnumber">6</span> <span class="toctext">Speicher mappen</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="#In_physischen_Speicher_schreiben"><span class="tocnumber">7</span> <span class="toctext">In physischen Speicher schreiben</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="#Paging_im_Long_Mode"><span class="tocnumber">8</span> <span class="toctext">Paging im Long Mode</span></a>
<ul>
<li class="toclevel-2 tocsection-9"><a href="#Page-Map_Level-4_Table"><span class="tocnumber">8.1</span> <span class="toctext">Page-Map Level-4 Table</span></a></li>
<li class="toclevel-2 tocsection-10"><a href="#Page-Directory_Pointer_Table"><span class="tocnumber">8.2</span> <span class="toctext">Page-Directory Pointer Table</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="#Page-Directory_Table"><span class="tocnumber">8.3</span> <span class="toctext">Page-Directory Table</span></a></li>
<li class="toclevel-2 tocsection-12"><a href="#Page_Table"><span class="tocnumber">8.4</span> <span class="toctext">Page Table</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-13"><a href="#Weiterf.C3.BChrende_Artikel"><span class="tocnumber">9</span> <span class="toctext">Weiterführende Artikel</span></a></li>
<li class="toclevel-1 tocsection-14"><a href="#Links"><span class="tocnumber">10</span> <span class="toctext">Links</span></a></li>
</ul>
</td></tr></tbody></table>
<h2> <span class="mw-headline" id="Funktionsweise"> Funktionsweise </span></h2>
<p>Der virtuelle Speicher wird zunächst in gleich große Blöcke, so 
genannte Pages (Seiten), unterteilt. In der x86-Architektur sind dies 
Blöcke zu je vier Kilobytes. Einen Speicherkontext kann man sich 
vereinfacht als eine riesige Tabelle vorstellen, die jedem virtuellen 
Block einen gleich großen Block irgendwo im physischen Speicher zuweist.
 Diesen physischen Speicherblock nennt man auch <i>Page Frame</i> (dt. Seitenrahmen, oder seltener auch Seitenkachel).
</p><p>Die folgende Tabelle dient als (von den Zahlen her völlig 
sinnfreie) Veranschaulichung dieser Übersetzung. Wenn das Programm jetzt
 auf die Speicheradresse 0x1234 zugreift, wird in Wirklichkeit auf die 
physische Adresse 0x3234 zugegriffen. Es muss nicht jede virtuelle 
Adresse <i>gemappt</i> (d.&nbsp;h. einer physischen Adresse zugewiesen) 
sein – der virtuelle Adressraum ist im Allgemeinen auch größer als der 
installierte physische Speicher (auf i386 beispielsweise 4&nbsp;GB). 
Wird auf eine nicht gemappte Adresse zugegriffen, z.&nbsp;B. 0x25a2 im 
Beispiel, wird eine Exception (x86: Page Fault) ausgelöst.
</p>
<table class="prettytable">
<tbody><tr>
<th> Virtuell    </th>
<th> Physisch
</th></tr>
<tr>
<td> 0x0000 bis 0x0fff </td>
<td> 0xa000
</td></tr>
<tr>
<td> 0x1000 bis 0x1fff </td>
<td> 0x3000
</td></tr>
<tr>
<td> 0x2000 bis 0x2fff </td>
<td> --
</td></tr>
<tr>
<td> ... </td>
<td> ...
</td></tr></tbody></table>
<p>In der Praxis handelt es sich dabei nicht um eine einzige riesige 
Tabelle, die wie erwähnt zu großen Teilen ohnehin leer bleiben und 
Speicher verschwenden würde. Stattdessen benutzt man ein zwei- oder 
mehrstufiges System.
</p><p>Beim i386 bildet ein <i>Page Directory</i> einen Speicherkontext 
ab. Dabei handelt es sich um eine Tabelle, die virtuellen 
Speicherblöcken von 4&nbsp;MB Größe die physische Adresse einer <i>Page Table</i> zuweist oder den Speicherbereich als frei markiert.
</p><p>Die Page Table ist anschließend dafür zuständig, innerhalb 
„ihrer“ 4&nbsp;MB die Zuordnung der einzelnen 4K-Pages vorzunehmen. Beim
 Zugriff auf die Adresse 0x456789 wird also zunächst festgestellt, dass 
die Pagetable für den Bereich 4 bis 8&nbsp;MB zuständig ist (0x400000 
sind 4&nbsp;MB), und ihre Adresse im Page Directory nachgeschlagen. 
Anschließend wird innerhalb der Page Table nachgeschlagen, was die 
physische Adresse für die Bytes 0x56000 bis 0x56fff dieses 4-MB-Blocks 
ist. Angenommen, die Page Table ordnet diesen die physische Adresse 
0xabcde000 zu, dann liegt der gesuchte Speicher an 0xabcde789.
</p><p>Wie die CPU aus einer virtuellen die zugeordnete physische Adresse berechnet, soll folgende Grafik zeigen:
<a href="http://www.lowlevel.eu/wiki/Datei:Paging_funktionsweise.jpg" class="image"><img alt="Paging funktionsweise.jpg" src="Paging%20%13%20Lowlevel_files/Paging_funktionsweise.jpg" height="367" width="774"></a>
</p><p>Das Berechnen erfolgt folgendermaßen:
</p>
<ol><li> Page Directory suchen, anhand der Adresse in CR3
</li><li> im Page Directory den Eintrag suchen, dessen Index in Bit 22-31 der virtuellen Adresse steht
</li><li> dieser Eintrag zeigt auf eine Page Table
</li><li> in dieser Page Table den Eintrag suchen, dessen Index in Bit 12-21 der virtuellen Adresse steht
</li><li> dieser Eintrag wiederum zeigt auf eine Page
</li><li> in dieser Page die gesuchten Daten suchen, deren Offset innerhalb dieser Page in den Bits 0-11 in der virtuellen Adresse steht
</li></ol>
<p>(<i>Hinweis:</i> Bei Schritt 3 kann der Eintrag auch direkt auf einen 4MB Bereich ("Large Page") zeigen, siehe hierzu <a href="http://www.lowlevel.eu/wiki/Page_Size_Extension" title="Page Size Extension">Page Size Extension</a>)
</p>
<h2> <span class="mw-headline" id="Einschalten_des_Paging-Mechanismus"> Einschalten des Paging-Mechanismus </span></h2>
<p>Zum Einschalten des Paging-Mechanismus auf der x86-Architektur muss 
man Bit-31 im CR0-Register setzen. Davor muss aber ein gültiges 
Page-Directory angelegt und dessen physische Adresse im CR3-Register 
abgelegt worden sein.
</p>
<h2> <span class="mw-headline" id="Page-Directory"> Page-Directory </span></h2>
<p>Ein Pagedirectory enthält 1024 Eintrage à vier Byte. Ein 
Pagedirectory-Eintrag kann jeweils auf ein Pagetable zeigen. 
Pagedirectories (wie auch Pagetables) müssen immer 4k-aligned sein, 
d.&nbsp;h. sie füllen genau eine Page aus.
</p>
<table class="prettytable">
<tbody><tr>
<th> Bit     </th>
<th> Beschreibung
</th></tr>
<tr>
<td> 0       </td>
<td> Gibt an, ob die Page momentan im Speicher liegt. Ist das Bit 
gelöscht (Page nicht im Speicher), dann sind alle anderen Bits für das 
Betriebssystem frei verfügbar und können z.&nbsp;B. für Swapping genutzt
 werden.
</td></tr>
<tr>
<td> 1       </td>
<td> Wenn dieses Bit gesetzt ist, kann die Page beschrieben werden. Ansonsten kann die Page nur gelesen werden.
</td></tr>
<tr>
<td> 2       </td>
<td> Wenn dieses Bit gesetzt ist, darf jeder auf die Page zugreifen. Ansonsten nur Ring 0.
</td></tr>
<tr>
<td> 3       </td>
<td> Wenn dieses Bit gesetzt ist, wird Write-Through-Caching benutzt.
</td></tr>
<tr>
<td> 4       </td>
<td> Wenn dieses Bit gesetzt ist, wird für die Page kein Cache benutzt.
</td></tr>
<tr>
<td> 5       </td>
<td> Wird von der CPU gesetzt, wenn die Page Table benutzt wurde. Dieses Bit wird allerdings nicht von der CPU zurückgesetzt.
</td></tr>
<tr>
<td> 6       </td>
<td> Wird ignoriert, falls 4-kB-Page, andernfalls wird es von der CPU bei einem Schreibzugriff auf die Page gesetzt
</td></tr>
<tr>
<td> 7       </td>
<td> Gibt die Größe der Page an. 0 steht für 4&nbsp;kB, 1 für 4&nbsp;MB 
(oder 2&nbsp;MB bei Verwendung von PAE). Das S-Bit ist wirkungslos, wenn
 nicht im <a href="http://www.lowlevel.eu/wiki/Steuerregister" title="Steuerregister" class="mw-redirect">Steuerregister</a> CR4 das PSE-Bit (4-MB-Pages) oder PAE-Bit (2-MB-Pages) gesetzt ist.
</td></tr>
<tr>
<td> 8       </td>
<td> Wird ignoriert, falls 4-kB-Page, andernfalls hat es die gleiche Bedeutung wie Bit G in Page-Table-Einträgen (s.&nbsp;u.).
</td></tr>
<tr>
<td> 9 – 11  </td>
<td> Diese Bits sind frei verfügbar. Sie können z.&nbsp;B. genutzt 
werden um Pages zu markieren, die zwar im Speicher liegen, aber auch 
schon auf einen Swapmedium existieren, so dass sie ohne weiteres 
geswappt werden können, und/oder um Pages zu markieren, die nicht 
ausgelagert werden dürfen.
</td></tr>
<tr>
<td> 12 – 31 </td>
<td> Bits 12 – 31 eines Zeigers zu einer Pagetable
</td></tr></tbody></table>
<h2> <span class="mw-headline" id="Page_Tables"> Page Tables </span></h2>
<p>Eine Page Table enthält 1024 Einträge à vier Byte. Jeder Eintrag 
zeigt auf eine physische Page. Page Tables müssen 4k-aligned sein und 
füllen somit eine ganze Page.
</p>
<table class="prettytable">
<tbody><tr>
<th> Bit     </th>
<th> Beschreibung
</th></tr>
<tr>
<td> 0       </td>
<td> Gibt an ob die Page momentan im Speicher liegt. Ist das Bit 
gelöscht (Page nicht im Speicher), dann sind alle anderen Bits für das 
Betriebssystem frei verfügbar und können z.&nbsp;B. für Swapping genutzt
 werden.
</td></tr>
<tr>
<td> 1       </td>
<td> Wenn dieses Bit gesetzt ist, kann die Page beschrieben werden. Ansonsten kann die Page nur gelesen werden.
</td></tr>
<tr>
<td> 2       </td>
<td> Wenn dieses Bit gesetzt ist, darf jeder auf die Page zugreifen. Ansonsten nur Ring 0.
</td></tr>
<tr>
<td> 3       </td>
<td> Wenn dieses Bit gesetzt ist, wird Write-Through-Caching benutzt.
</td></tr>
<tr>
<td> 4       </td>
<td> Wenn dieses Bit gesetzt ist, wird für die Page kein Cache benutzt.
</td></tr>
<tr>
<td> 5       </td>
<td> Wird von der CPU gesetzt, wenn die Page benutzt wurde. Dieses Bit wird allerdings nicht von der CPU zurückgesetzt.
</td></tr>
<tr>
<td> 6       </td>
<td> Dieses Bit wird von der CPU gesetzt, wenn auf die Page geschrieben wurde. Dieses Bit wird nicht von der CPU zurückgesetzt.
</td></tr>
<tr>
<td> 7       </td>
<td> Normalerweise 0.
</td></tr>
<tr>
<td> 8       </td>
<td> Wenn G gesetzt ist, wird der TLB (s.&nbsp;u.) für diese Page nicht 
erneuert, nachdem CR3 neu gesetzt wurde. Diese Flag ist also praktisch 
für Pages, die in jedem Adressraum gleich gemappt sind (z.&nbsp;B. 
Kernel)
</td></tr>
<tr>
<td> 9 – 11  </td>
<td> Diese Bits sind frei verfügbar. Sie können z.&nbsp;B. genutzt 
werden um Pages zu markieren, die zwar im Speicher liegen, aber auch 
schon auf einen Swapmedium existieren, so dass sie ohne weiteres 
geswappt werden können, und/oder um Pages zu markieren, die nicht 
ausgelagert werden dürfen.
</td></tr>
<tr>
<td> 12 – 31 </td>
<td> 12 – 31 der physischen Adresse eines Pageframes
</td></tr></tbody></table>
<h2> <span class="mw-headline" id="Translation_Lookaside_Buffer"> Translation Lookaside Buffer </span></h2>
<p>Der Prozessor benutzt für das Auflösen der virtuellen Adressen eine Art Cache für die zuletzt benutzten Pages, den sogenannten <i>Translation Lookaside Buffer</i>
 oder TLB. Für den Programmierer spielt dieser TLB dann eine Rolle, wenn
 das Mapping einer Page geändert wird, aber der Prozessor möglicherweise
 noch die alte physische Adresse im TLB behalten hat.
</p><p>Daher ist zu beachten, dass bei einer Änderung des Page Directory oder einer Page Table der TLB <i>invalidiert</i>
 werden muss (d.&nbsp;h. der entsprechende Eintrag wird aus dem TLB 
gelöscht). Versäumt man diese Invalidierung, äußert sich das im 
Allgemeinen erst später durch völlig unerwartete Ereignisse. Diese 
Fehler sind extrem schwer zu debuggen, da scheinbar auf die richtige 
Speicheradresse zugegriffen wird, aber in Wirklichkeit mit falschen 
Werten gearbeitet wird.
</p><p>Man invalidiert den TLB mit „invlpg &lt;address&gt;“. Wobei 
&lt;address&gt; eine virtuelle Adresse innerhalb der von der Änderung 
betroffenen Page ist. invlpg ist ab dem 486 vorhanden. Beim Neuladen des
 <a href="http://www.lowlevel.eu/wiki/Steuerregister" title="Steuerregister" class="mw-redirect">Steuerregisters</a> CR3 wird der TLB ebenfalls komplett geleert (Achtung, das geht natürlich auf die Performance).
</p>
<h2> <span class="mw-headline" id="Speicher_mappen"> Speicher mappen </span></h2>
<p>Um eine beliebige virtuelle Adresse auf eine beliebige physische 
Adresse zu mappen, muss man erst den richtigen Eintrag im Page Directory
 und in der Page Table berechnen, um schließlich die physische Page (mit
 den passenden Flags) in der Page Table eintragen zu können. Es wird 
immer von virtuell nach physisch zugeordnet, d.&nbsp;h. wenn man 0xB8000
 (phys.) auf 0x12345000 (virt.) mappen will, muss man erst den 
Page-Directory- und Page-Table-Eintrag von 0x12345000 berechnen. Das 
geht am besten so:
</p>
<pre class="c">Pagedirectory_Eintrag =  virtuelle_adresse &gt;&gt; <span style="color: #883388;">22</span>           <span style="color: #000000; font-weight: bold;">(</span>= 0x48<span style="color: #000000; font-weight: bold;">)</span>
Pagetable_Eintrag     = <span style="color: #000000; font-weight: bold;">(</span>virtuelle_adresse &gt;&gt; <span style="color: #883388;">12</span><span style="color: #000000; font-weight: bold;">)</span>&nbsp;% <span style="color: #883388;">1024</span>   <span style="color: #000000; font-weight: bold;">(</span>= 0x345<span style="color: #000000; font-weight: bold;">)</span></pre>
<p>Nun suche man erst die Adresse der Page Table (im eben berechneten <i>Pagedirectory_Eintrag</i> schauen). <b>Achtung:</b> Es handelt sich hier um die physische Adresse.
Mit der Adresse der Page Table kann man jetzt in den <i>Pagetable_Eintrag</i> die physische Adresse eintragen, die passenden Flags setzen und schon ist die Page gemappt.
</p>
<h2> <span class="mw-headline" id="In_physischen_Speicher_schreiben"> In physischen Speicher schreiben </span></h2>
<p>Wenn nun Paging eingeschaltet ist, kann man nicht mehr in den 
physischen Speicher schreiben. Wenn man nicht viel physischen Speicher 
hat, oder 64 Bit benutzt und deswegen der virtuelle Adressraum groß 
genug ist, kann man den gesamten physischen Speicher in den virtuellen 
mappen.
</p><p>Es besteht aber auch die Möglichkeit, Zugriff auf den gesamten 
physischen Speicher zu haben, ohne dass man ihn direkt mappt. Erstmal 
braucht man eine Möglichkeit das Page Directory und die Page Tables noch
 zu ändern nachdem Paging eingeschaltet wurde. Wenn man dies kann, kann 
man sich einfach immer die gerade gebrauchte physische Page auf eine 
festgelegte virtuelle Page mappen und voilà. Um nun Zugriff auf das Page
 Directory und die Page Tables zu haben, kann man einfach z.&nbsp;B. als
 letzte Page Table das Page Directory selbst eintragen. Das Page 
Directory wird dann als Page Table interpretiert und alle Page Tables 
als Pages in den Speicher gemappt. Somit enthalten die letzten 4&nbsp;MB
 des virtuellen Speichers die Page Tables, wobei die letzten 4&nbsp;kB 
das Page Directory enthalten.
</p>
<h2> <span class="mw-headline" id="Paging_im_Long_Mode">Paging im Long Mode</span></h2>
<p>Das Paging im Long Mode gestaltet sich etwas schwieriger als das 
Paging im Protected Mode. Dies liegt zunächst einmal daran, dass im Long
 Mode nicht nur zwei Ebenen existieren, sondern bis zu vier.
</p>
<h3> <span class="mw-headline" id="Page-Map_Level-4_Table">Page-Map Level-4 Table</span></h3>
<p>Eine Page-Map Level-4 Table enthält 512 Eintrage à acht Byte. Ein 
Page-Map Level-4 Table-Eintrag kann jeweils auf eine Page-Directory 
Pointer Table zeigen.
</p>
<table class="prettytable">
<tbody><tr>
<th> Bit </th>
<th> Funktion
</th></tr>
<tr>
<td> 0 </td>
<td> Gibt an, ob die Page momentan im Speicher liegt. Ist das Bit 
gelöscht (Page nicht im Speicher), dann sind alle anderen Bits für das 
Betriebssystem frei verfügbar und können z. B. für Swapping genutzt 
werden.
</td></tr>
<tr>
<td> 1 </td>
<td> Wenn dieses Bit gesetzt ist, kann die Page beschrieben werden. Ansonsten kann die Page nur gelesen werden.
</td></tr>
<tr>
<td> 2 </td>
<td> Wenn dieses Bit gesetzt ist, darf jeder auf die Page zugreifen. Ansonsten nur Ring 0.
</td></tr>
<tr>
<td> 3 </td>
<td> Wenn dieses Bit gesetzt ist, wird Write-Through-Caching benutzt.
</td></tr>
<tr>
<td> 4 </td>
<td> Wenn dieses Bit gesetzt ist, wird für die Page kein Cache benutzt.
</td></tr>
<tr>
<td> 5 </td>
<td> Wird von der CPU gesetzt, wenn die Page-Map Level-4 Table benutzt 
wurde. Dieses Bit wird allerdings nicht von der CPU zurückgesetzt.
</td></tr>
<tr>
<td> 6 </td>
<td> Wird ignoriert und sollte 0 sein.
</td></tr>
<tr>
<td> 7-8 </td>
<td> Muss 0 sein.
</td></tr>
<tr>
<td> 9-11 </td>
<td> Diese Bits sind frei verfügbar. Sie können z. B. genutzt werden um 
Pages zu markieren, die zwar im Speicher liegen, aber auch schon auf 
einen Swapmedium existieren, so dass sie ohne weiteres geswappt werden 
können, und/oder um Pages zu markieren, die nicht ausgelagert werden 
dürfen.
</td></tr>
<tr>
<td> 12-51 </td>
<td> Gibt die physische Adresse der Page-Directory Pointer Table an.
</td></tr>
<tr>
<td> 52-62 </td>
<td> Diese Bits sind frei verfügbar.
</td></tr>
<tr>
<td> 63 </td>
<td> Wenn EFER.NXE auf 1 gesetzt ist gibt dieses Bit an, ob das 
Ausführen von Code in der Page erlaubt ist (0) oder nicht (1). Wenn 
EFER.NXE auf 0 gesetzt ist und das Bit auf 1 gesetzt ist wird ein 
Pagefault ausgelöst.
</td></tr></tbody></table>
<h3> <span class="mw-headline" id="Page-Directory_Pointer_Table">Page-Directory Pointer Table</span></h3>
<p>Eine Page-Directory Pointer Table enthält 512 Eintrage à acht Byte. 
Ein Page-Directory Pointer Table-Eintrag kann jeweils auf eine 
Page-Directory Table zeigen.
</p>
<table class="prettytable">
<tbody><tr>
<th> Bit </th>
<th> Funktion
</th></tr>
<tr>
<td> 0 </td>
<td> Gibt an, ob die Page momentan im Speicher liegt. Ist das Bit 
gelöscht (Page nicht im Speicher), dann sind alle anderen Bits für das 
Betriebssystem frei verfügbar und können z. B. für Swapping genutzt 
werden.
</td></tr>
<tr>
<td> 1 </td>
<td> Wenn dieses Bit gesetzt ist, kann die Page beschrieben werden. Ansonsten kann die Page nur gelesen werden.
</td></tr>
<tr>
<td> 2 </td>
<td> Wenn dieses Bit gesetzt ist, darf jeder auf die Page zugreifen. Ansonsten nur Ring 0.
</td></tr>
<tr>
<td> 3 </td>
<td> Wenn dieses Bit gesetzt ist, wird Write-Through-Caching benutzt.
</td></tr>
<tr>
<td> 4 </td>
<td> Wenn dieses Bit gesetzt ist, wird für die Page kein Cache benutzt.
</td></tr>
<tr>
<td> 5 </td>
<td> Wird von der CPU gesetzt, wenn die Page-Directory Pointer Table 
benutzt wurde. Dieses Bit wird allerdings nicht von der CPU 
zurückgesetzt.
</td></tr>
<tr>
<td> 6 </td>
<td> Wird ignoriert und sollte 0 sein.
</td></tr>
<tr>
<td> 7 </td>
<td> Muss 0 sein, wenn 2 MiB Pages oder 4 KiB Pages verwendet werden, muss 1 sein, wenn 1 GiB Pages verwendet werden.
</td></tr>
<tr>
<td> 8 </td>
<td> Wenn CR4.PGE und Bit 7 auf 1 gesetzt sind, gibt das Bit an, ob die 
Page global ist (Nicht durch Instruktionen wie mov cr3 geflusht wird). 
Muss ansonsten 0 sein.
</td></tr>
<tr>
<td> 9-11 </td>
<td> Diese Bits sind frei verfügbar. Sie können z. B. genutzt werden um 
Pages zu markieren, die zwar im Speicher liegen, aber auch schon auf 
einen Swapmedium existieren, so dass sie ohne weiteres geswappt werden 
können, und/oder um Pages zu markieren, die nicht ausgelagert werden 
dürfen.
</td></tr>
<tr>
<td> 12-51 </td>
<td> Gibt die physische Adresse der Page-Directory Table an. Gibt die 
physische Adresse der Page Table an. Besteht alternativ aus der 
physischen Adresse der Page (Bits 30-51), dem höchstes PAT Bit (Bit 12, 
sollte 0 sein wenn nicht benötigt) und reservierten Bits (Bit 13-29), 
wenn 1 GiB Pages verwendet werden.
</td></tr>
<tr>
<td> 52-62 </td>
<td> Diese Bits sind frei verfügbar.
</td></tr>
<tr>
<td> 63 </td>
<td> Wenn EFER.NXE auf 1 gesetzt ist gibt dieses Bit an, ob das 
Ausführen von Code in der Page erlaubt ist (0) oder nicht (1). Wenn 
EFER.NXE auf 0 gesetzt ist und das Bit auf 1 gesetzt ist wird ein 
Pagefault ausgelöst.
</td></tr></tbody></table>
<h3> <span class="mw-headline" id="Page-Directory_Table">Page-Directory Table</span></h3>
<p>Eine Page-Directory Table enthält 512 Eintrage à acht Byte. Ein 
Page-Directory Table-Eintrag kann jeweils auf eine Page Table zeigen.
</p>
<table class="prettytable">
<tbody><tr>
<th> Bit </th>
<th> Funktion
</th></tr>
<tr>
<td> 0 </td>
<td> Gibt an, ob die Page momentan im Speicher liegt. Ist das Bit 
gelöscht (Page nicht im Speicher), dann sind alle anderen Bits für das 
Betriebssystem frei verfügbar und können z. B. für Swapping genutzt 
werden.
</td></tr>
<tr>
<td> 1 </td>
<td> Wenn dieses Bit gesetzt ist, kann die Page beschrieben werden. Ansonsten kann die Page nur gelesen werden.
</td></tr>
<tr>
<td> 2 </td>
<td> Wenn dieses Bit gesetzt ist, darf jeder auf die Page zugreifen. Ansonsten nur Ring 0.
</td></tr>
<tr>
<td> 3 </td>
<td> Wenn dieses Bit gesetzt ist, wird Write-Through-Caching benutzt.
</td></tr>
<tr>
<td> 4 </td>
<td> Wenn dieses Bit gesetzt ist, wird für die Page kein Cache benutzt.
</td></tr>
<tr>
<td> 5 </td>
<td> Wird von der CPU gesetzt, wenn die Page-Directory Table benutzt 
wurde. Dieses Bit wird allerdings nicht von der CPU zurückgesetzt.
</td></tr>
<tr>
<td> 6 </td>
<td> Wird ignoriert und sollte 0 sein.
</td></tr>
<tr>
<td> 7 </td>
<td> Muss 0 sein, wenn 1 GiB Pages oder 4 KiB Pages verwendet werden, muss 1 sein, wenn 2 MiB Pages verwendet werden.
</td></tr>
<tr>
<td> 8 </td>
<td> Wenn CR4.PGE und Bit 7 auf 1 gesetzt sind, gibt das Bit an, ob die 
Page global ist (Nicht durch Instruktionen wie mov cr3 geflusht wird). 
Muss ansonsten 0 sein.
</td></tr>
<tr>
<td> 9-11 </td>
<td> Diese Bits sind frei verfügbar. Sie können z. B. genutzt werden um 
Pages zu markieren, die zwar im Speicher liegen, aber auch schon auf 
einen Swapmedium existieren, so dass sie ohne weiteres geswappt werden 
können, und/oder um Pages zu markieren, die nicht ausgelagert werden 
dürfen.
</td></tr>
<tr>
<td> 12-51 </td>
<td> Gibt die physische Adresse der Page Table an. Besteht alternativ 
aus der physischen Adresse der Page (Bits 21-51), dem höchstes PAT Bit 
(Bit 12, sollte 0 sein wenn nicht benötigt) und reservierten Bits (Bit 
13-20), wenn 2 MiB Pages verwendet werden.
</td></tr>
<tr>
<td> 52-62 </td>
<td> Diese Bits sind frei verfügbar.
</td></tr>
<tr>
<td> 63 </td>
<td> Wenn EFER.NXE auf 1 gesetzt ist gibt dieses Bit an, ob das 
Ausführen von Code in der Page erlaubt ist (0) oder nicht (1). Wenn 
EFER.NXE auf 0 gesetzt ist und das Bit auf 1 gesetzt ist wird ein 
Pagefault ausgelöst.
</td></tr></tbody></table>
<h3> <span class="mw-headline" id="Page_Table">Page Table</span></h3>
<p>Eine Page Table enthält 512 Eintrage à acht Byte. Ein Page Table-Eintrag kann jeweils auf eine Page zeigen
</p>
<table class="prettytable">
<tbody><tr>
<th> Bit </th>
<th> Funktion
</th></tr>
<tr>
<td> 0 </td>
<td> Gibt an, ob die Page momentan im Speicher liegt. Ist das Bit 
gelöscht (Page nicht im Speicher), dann sind alle anderen Bits für das 
Betriebssystem frei verfügbar und können z. B. für Swapping genutzt 
werden.
</td></tr>
<tr>
<td> 1 </td>
<td> Wenn dieses Bit gesetzt ist, kann die Page beschrieben werden. Ansonsten kann die Page nur gelesen werden.
</td></tr>
<tr>
<td> 2 </td>
<td> Wenn dieses Bit gesetzt ist, darf jeder auf die Page zugreifen. Ansonsten nur Ring 0.
</td></tr>
<tr>
<td> 3 </td>
<td> Wenn dieses Bit gesetzt ist, wird Write-Through-Caching benutzt.
</td></tr>
<tr>
<td> 4 </td>
<td> Wenn dieses Bit gesetzt ist, wird für die Page kein Cache benutzt.
</td></tr>
<tr>
<td> 5 </td>
<td> Wird von der CPU gesetzt, wenn die Page Table benutzt wurde. Dieses Bit wird allerdings nicht von der CPU zurückgesetzt.
</td></tr>
<tr>
<td> 6 </td>
<td> Wird ignoriert und sollte 0 sein.
</td></tr>
<tr>
<td> 7 </td>
<td> Höchstes PAT Bit. Sollte 0 sein wenn nicht benötigt.
</td></tr>
<tr>
<td> 8 </td>
<td> Wenn CR4.PGE und Bit 7 auf 1 gesetzt sind, gibt das Bit an, ob die 
Page global ist (Nicht durch Instruktionen wie mov cr3 geflusht wird). 
Muss ansonsten 0 sein.
</td></tr>
<tr>
<td> 9-11 </td>
<td> Diese Bits sind frei verfügbar. Sie können z. B. genutzt werden um 
Pages zu markieren, die zwar im Speicher liegen, aber auch schon auf 
einen Swapmedium existieren, so dass sie ohne weiteres geswappt werden 
können, und/oder um Pages zu markieren, die nicht ausgelagert werden 
dürfen.
</td></tr>
<tr>
<td> 12-51 </td>
<td> Gibt die physische Adresse der Page an wenn 4 KiB Pages verwendet werden.
</td></tr>
<tr>
<td> 52-62 </td>
<td> Diese Bits sind frei verfügbar.
</td></tr>
<tr>
<td> 63 </td>
<td> Wenn EFER.NXE auf 1 gesetzt ist gibt dieses Bit an, ob das 
Ausführen von Code in der Page erlaubt ist (0) oder nicht (1). Wenn 
EFER.NXE auf 0 gesetzt ist und das Bit auf 1 gesetzt ist wird ein 
Pagefault ausgelöst.
</td></tr></tbody></table>
<h2> <span class="mw-headline" id="Weiterf.C3.BChrende_Artikel"> Weiterführende Artikel </span></h2>
<ul><li> <a href="http://www.lowlevel.eu/wiki/Paging_Tutorial" title="Paging Tutorial">Paging Tutorial</a>
</li></ul>
<h2> <span class="mw-headline" id="Links"> Links </span></h2>
<ul><li> <a href="http://www.homix-online.de/Tutorials/32PMode-Paging.php" class="external text" rel="nofollow">Paging-Tutorial</a>
</li><li> <a href="http://www.fh-zwickau.de/doc/prmo/pmtutor/text/p_spez1.htm" class="external text" rel="nofollow">Paging im PM-Tutorial der FH Zwickau</a>
</li><li> <a href="http://www.lowlevel.eu/wiki/Ausgabe_8#Paging" title="Ausgabe 8">Ausgabe 8</a>
</li><li> <a href="http://osdever.net/tutorials/pdf/basic_paging.pdf" class="external free" rel="nofollow">http://osdever.net/tutorials/pdf/basic_paging.pdf</a>
</li></ul>

<!-- 
NewPP limit report
Preprocessor node count: 86/1000000
Post-expand include size: 133/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key lowlevel_wiki:pcache:idhash:1496-0!*!0!!de!2!edit=0 and timestamp 20130611155530 -->
<div class="printfooter">
Von „<a href="http://www.lowlevel.eu/wiki/Paging">http://www.lowlevel.eu/wiki/Paging</a>“</div>
		<div id="catlinks" class="catlinks"><div id="mw-normal-catlinks"><a href="http://www.lowlevel.eu/wiki/Spezial:Kategorien" title="Spezial:Kategorien">Kategorien</a>: <span dir="ltr"><a href="http://www.lowlevel.eu/wiki/Kategorie:Tutorials" title="Kategorie:Tutorials">Tutorials</a></span> | <span dir="ltr"><a href="http://www.lowlevel.eu/wiki/Kategorie:Glossar" title="Kategorie:Glossar">Glossar</a></span> | <span dir="ltr"><a href="http://www.lowlevel.eu/wiki/Kategorie:X86" title="Kategorie:X86">X86</a></span> | <span dir="ltr"><a href="http://www.lowlevel.eu/wiki/Kategorie:Speicherverwaltung" title="Kategorie:Speicherverwaltung">Speicherverwaltung</a></span></div></div>		<!-- end content -->
				<div class="visualClear"></div>
	</div>
</div></div>
<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Ansichten</h5>
		<div class="pBody">
			<ul>
				 <li id="ca-nstab-main" class="selected"><a href="http://www.lowlevel.eu/wiki/Paging" title="Seiteninhalt anzeigen [alt-shift-c]" accesskey="c">Seite</a></li>
				 <li id="ca-talk"><a href="http://www.lowlevel.eu/wiki/Diskussion:Paging" title="Diskussion zum Seiteninhalt [alt-shift-t]" accesskey="t">Diskussion</a></li>
				 <li id="ca-viewsource"><a href="http://www.lowlevel.eu/w/index.php?title=Paging&amp;action=edit" title="Diese Seite ist geschützt. Der Quelltext kann angesehen werden. [alt-shift-e]" accesskey="e">Quelltext anzeigen</a></li>
				 <li id="ca-history"><a href="http://www.lowlevel.eu/w/index.php?title=Paging&amp;action=history" title="Frühere Versionen dieser Seite [alt-shift-h]" accesskey="h">Versionen/Autoren</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Meine Werkzeuge</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="http://www.lowlevel.eu/w/index.php?title=Spezial:Anmelden&amp;returnto=Paging" title="Sich anzumelden wird zwar gerne gesehen, ist aber keine Pflicht. [alt-shift-o]" accesskey="o">Anmelden</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(/wiki.png);" href="http://www.lowlevel.eu/wiki/Hauptseite" title="Hauptseite"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class="generated-sidebar portlet" id="p-navigation">
		<h5>Navigation</h5>
		<div class="pBody">
			<ul>
				<li id="n-mainpage"><a href="http://www.lowlevel.eu/wiki/Hauptseite" title="Hauptseite anzeigen [alt-shift-z]" accesskey="z">Hauptseite</a></li>
				<li id="n-Lowlevel-Portal"><a href="http://www.lowlevel.eu/wiki/Lowlevel:Portal">Lowlevel-Portal</a></li>
				<li id="n-Lowlevel-Forum"><a href="http://forum.lowlevel.eu/">Lowlevel-Forum</a></li>
				<li id="n-recentchanges"><a href="http://www.lowlevel.eu/wiki/Spezial:Letzte_%C3%84nderungen" title="Liste der letzten Änderungen in Lowlevel [alt-shift-r]" accesskey="r">Letzte Änderungen</a></li>
				<li id="n-Zuf.C3.A4llige-Seite"><a href="http://www.lowlevel.eu/wiki/Spezial:Zuf%C3%A4llige_Seite">Zufällige Seite</a></li>
				<li id="n-Wiki-Crashkurs"><a href="http://www.lowlevel.eu/wiki/Wiki-Crashkurs">Wiki-Crashkurs</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Suche</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform">
				<input name="title" value="Spezial:Suche" type="hidden">
				<input autocomplete="off" id="searchInput" title="Lowlevel durchsuchen" accesskey="f" name="search" type="search">
				<input name="go" class="searchButton" id="searchGoButton" value="Seite" title="Gehe direkt zu der Seite, die exakt dem eingegebenen Namen entspricht." type="submit">&nbsp;
				<input name="fulltext" class="searchButton" id="mw-searchButton" value="Suchen" title="Suche nach Seiten, die diesen Text enthalten" type="submit">
			</form>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Werkzeuge</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="http://www.lowlevel.eu/wiki/Spezial:Linkliste/Paging" title="Liste aller Seiten, die hierher verlinken [alt-shift-j]" accesskey="j">Links auf diese Seite</a></li>
				<li id="t-recentchangeslinked"><a href="http://www.lowlevel.eu/wiki/Spezial:%C3%84nderungen_an_verlinkten_Seiten/Paging" title="Letzte Änderungen an Seiten, die von hier verlinkt sind [alt-shift-k]" accesskey="k">Änderungen an verlinkten Seiten</a></li>
<li id="t-specialpages"><a href="http://www.lowlevel.eu/wiki/Spezial:Spezialseiten" title="Liste aller Spezialseiten [alt-shift-q]" accesskey="q">Spezialseiten</a></li>
				<li id="t-print"><a href="http://www.lowlevel.eu/w/index.php?title=Paging&amp;printable=yes" rel="alternate" title="Druckansicht dieser Seite [alt-shift-p]" accesskey="p">Druckversion</a></li>				<li id="t-permalink"><a href="http://www.lowlevel.eu/w/index.php?title=Paging&amp;oldid=10878" title="Dauerhafter Link zu dieser Seitenversion">Permanenter Link</a></li><li id="t-pdf">
<a href="http://www.lowlevel.eu/w/index.php?title=Spezial:Pdfprint&amp;page=Paging">Als PDF ausgeben</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>In anderen Sprachen</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-en"><a href="http://wiki.osdev.org/Paging" title="Paging">English</a></li>
			</ul>
		</div>
	</div>
</div><!-- end of the left (by default at least) column -->
<div class="visualClear"></div>
<div id="footer">
	<div id="f-copyrightico">
		<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/de/"><img src="Paging%20%13%20Lowlevel_files/88x31.png" alt="Namensnennung - Keine kommerzielle Nutzung - Weitergabe unter gleichen Bedingungen 3.0 Deutschland" height="31" width="88"></a>
	</div>
	<div id="f-poweredbyico">
		<a href="http://www.mediawiki.org/"><img src="Paging%20%13%20Lowlevel_files/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" height="31" width="88"></a>
	</div>
	<ul id="f-list">
		<li id="lastmod"> Diese Seite wurde zuletzt am 24. September 2012 um 16:00 Uhr geändert.</li>
		<li id="viewcount">Diese Seite wurde bisher 12.553-mal abgerufen.</li>
		<li id="copyright">Der Inhalt ist verfügbar unter der Lizenz <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/de/" class="external ">Namensnennung - Keine kommerzielle Nutzung - Weitergabe unter gleichen Bedingungen 3.0 Deutschland</a>.</li>
		<li id="privacy"><a href="http://www.lowlevel.eu/wiki/Lowlevel:Datenschutz" title="Lowlevel:Datenschutz">Datenschutz</a></li>
		<li id="about"><a href="http://www.lowlevel.eu/wiki/Lowlevel:%C3%9Cber" title="Lowlevel:Über">Über Lowlevel</a></li>
		<li id="disclaimer"><a href="http://www.lowlevel.eu/wiki/Lowlevel:Impressum" title="Lowlevel:Impressum">Impressum</a></li>
	</ul>
</div>
</div>

<script src="Paging%20%13%20Lowlevel_files/load_002.php"></script><script src="Paging%20%13%20Lowlevel_files/load.php"></script>
<script>if ( window.mediaWiki ) {
	mediaWiki.config.set({"wgCanonicalNamespace": "", "wgCanonicalSpecialPageName": false, "wgNamespaceNumber": 0, "wgPageName": "Paging", "wgTitle": "Paging", "wgAction": "view", "wgArticleId": 1496, "wgIsArticle": true, "wgUserName": null, "wgUserGroups": ["*"], "wgCurRevisionId": 10878, "wgCategories": ["Tutorials", "Glossar", "X86", "Speicherverwaltung"], "wgBreakFrames": false, "wgRestrictionEdit": [], "wgRestrictionMove": [], "wgSearchNamespaces": [0]});
}
</script>
<script>if ( window.mediaWiki ) {
	mediaWiki.loader.load(["mediawiki.util", "mediawiki.legacy.wikibits", "mediawiki.legacy.ajax", "mediawiki.legacy.mwsuggest"]);
	mediaWiki.loader.go();
}
</script><script type="text/javascript" src="Paging%20%13%20Lowlevel_files/load_004.php"></script>

<script src="Paging%20%13%20Lowlevel_files/load_003.php"></script>
<script>if ( window.mediaWiki ) {
	mediaWiki.user.options.set({"ccmeonemails":0,"cols":80,"contextchars":50,"contextlines":5,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"monobook","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,
	"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"de","language":"de","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;mediaWiki.loader.state({"user.options":"ready"});
}
</script><!-- Served in 0.235 secs. --></body></html>