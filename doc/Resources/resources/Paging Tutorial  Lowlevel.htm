<!DOCTYPE html>
<html class="client-firefox client-firefox-2 client-gecko client-linux" dir="ltr" lang="de"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Paging Tutorial – Lowlevel</title>
<meta name="generator" content="MediaWiki 1.17.2">
<link rel="shortcut icon" href="http://www.lowlevel.eu/Favicon.png">
<link rel="search" type="application/opensearchdescription+xml" href="http://www.lowlevel.eu/w/opensearch_desc.php" title="Lowlevel (de)">
<link rel="EditURI" type="application/rsd+xml" href="http://www.lowlevel.eu/w/api.php?action=rsd">
<link title="Creative Commons" type="application/rdf+xml" href="http://www.lowlevel.eu/w/index.php?title=Paging_Tutorial&amp;action=creativecommons" rel="meta">
<link rel="copyright" href="http://creativecommons.org/licenses/by-nc-sa/3.0/de/">
<link rel="alternate" type="application/atom+xml" title="Atom-Feed für „Lowlevel“" href="http://www.lowlevel.eu/w/index.php?title=Spezial:Letzte_%C3%84nderungen&amp;feed=atom">
<link rel="stylesheet" href="Paging%20Tutorial%20%13%20Lowlevel_files/load_002.css">
<link rel="stylesheet" href="Paging%20Tutorial%20%13%20Lowlevel_files/main.css" media="screen">
<!--[if lt IE 5.5000]><link rel="stylesheet" href="/w/skins/monobook/IE50Fixes.css?301" media="screen" /><![endif]-->
<!--[if IE 5.5000]><link rel="stylesheet" href="/w/skins/monobook/IE55Fixes.css?301" media="screen" /><![endif]-->
<!--[if IE 6]><link rel="stylesheet" href="/w/skins/monobook/IE60Fixes.css?301" media="screen" /><![endif]-->
<!--[if IE 7]><link rel="stylesheet" href="/w/skins/monobook/IE70Fixes.css?301" media="screen" /><![endif]--><meta name="ResourceLoaderDynamicStyles" content=""><link rel="stylesheet" href="Paging%20Tutorial%20%13%20Lowlevel_files/load.css">
<link rel="stylesheet" href="Paging%20Tutorial%20%13%20Lowlevel_files/load.css">
<link rel="stylesheet" href="Paging%20Tutorial%20%13%20Lowlevel_files/load.css">

<link href="Paging%20Tutorial%20%13%20Lowlevel_files/FF2Fixes.css" rel="stylesheet" type="text/css"></head>
<body class="mediawiki ltr capitalize-all-nouns ns-0 ns-subject page-Paging_Tutorial skin-monobook">
<div id="globalWrapper">
<div id="column-content"><div id="content">
	<a id="top"></a>
	
	<h1 id="firstHeading" class="firstHeading">Paging Tutorial</h1>
	<div id="bodyContent">
		<div id="siteSub">Aus Lowlevel</div>
		<div id="contentSub"></div>
		<div id="jump-to-nav">Wechseln zu: <a href="#column-one">Navigation</a>, <a href="#searchInput">Suche</a></div>
		<!-- start content -->
<p>Willkommen zu meinem zweiten Tutorial hier auf lowlevel. Diesmal geht es um <a href="http://www.lowlevel.eu/wiki/Paging" title="Paging">Paging</a>, einem <a href="http://www.lowlevel.eu/wiki/Protected_Mode" title="Protected Mode"> Protected-Mode</a> Feature, das mit dem 80386 eingeführt und im 80486 verbessert wurde.
</p>
<table id="toc" class="toc"><tbody><tr><td><div id="toctitle"><h2>Inhaltsverzeichnis</h2> <span class="toctoggle">[<a href="#" class="internal" id="togglelink">Verbergen</a>]</span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Was_ist_Paging.3F"><span class="tocnumber">1</span> <span class="toctext">Was ist Paging?</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Einige_.C3.9Cberlegungen"><span class="tocnumber">2</span> <span class="toctext">Einige Überlegungen</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Der_Code"><span class="tocnumber">3</span> <span class="toctext">Der Code</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Ein_sehr_kleines_Beispiel"><span class="tocnumber">4</span> <span class="toctext">Ein sehr kleines Beispiel</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#Abschlie.C3.9Fende_Worte"><span class="tocnumber">5</span> <span class="toctext">Abschließende Worte</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="#Links"><span class="tocnumber">6</span> <span class="toctext">Links</span></a></li>
</ul>
</td></tr></tbody></table>
<h2> <span class="mw-headline" id="Was_ist_Paging.3F"> Was ist Paging? </span></h2>
<p>Wenn ihr einen <a href="http://www.lowlevel.eu/wiki/Kernel" title="Kernel">Kernel</a> schreibt, habt ihr mit Sicherheit schon Einträge in der <a href="http://www.lowlevel.eu/wiki/Global_Descriptor_Table" title="Global Descriptor Table"> GDT</a>
 gemacht. Dort konnte man Segmente festlegen, und hatte so schon ein 
wenig Speicherschutz. Allerdings hat das ganze auch noch einige 
Nachteile, weshalb schlaue Leute bei Intel Paging einführten. Bei Paging
 bekommen die Programme virtuellen Arbeitsspeicher (4 GB), der in 
4kb-Blöcken mittels Tabellen verwaltet wird. Wenn Paging eingeschaltet 
wurde, kann jeder Task seinen eigenen Adressraum haben, und kann auch 
nur auf seinen eigenen zugreifen. Das interessante an Paging ist, dass 
der virtuelle Adressraum nicht komplett im physischen Speicher liegen 
muss, ungenutzte Teile können auf die Festplatte ausgelagert werden 
(swapping).
</p><p>Die bereits erwähnten Tabellen heißen Page-Directory und 
Page-Table. Das Page-Directory enthält 1024 Einträge zu je 4 Byte (also 
4kb), jeder Eintrag verweist auf eine Page-Table, die auch 1024 Einträge
 zu je 4 Byte hat (alle Page-Tables zusammen haben 4MB!). Die Einträge 
der Page-Table verweisen dann auf 4kb große Blöcke im physischen 
Speicher.
</p><p>Eine virtuelle Adresse sieht zwar wie eine physische Adresse aus, lässt sich jedoch ein 3 Teile zerlegen:
</p><p><b>10bit Page-Directory-Index, 10bit Page-Table-Index, 12bit offset</b>
</p><p>Wir können daraus eine Formel ableiten, und daraus eine Funktion 
machen. Dieser Funktion geben wir eine virtuelle Adresse, und sie 
berechnet daraus die Einträge der Tabellen, die wir verändern müssen.
</p><p>Ein Eintrag in den Tabellen sieht so aus:
</p><p><b>20bit Adresse, 12bit Flags</b>
</p><p>Die Adresse verweist entweder auf eine Tabelle (Einrag im Page-Directory) oder auf eine 4kb-Page (Eintrag in einer Page-Table).
Die Flags geben z.B. an, wer auf diesen Speicherbereich zugreifen darf, oder ob dieser Speicherbereich überhaupt existiert.
</p>
<h2> <span class="mw-headline" id="Einige_.C3.9Cberlegungen"> Einige Überlegungen </span></h2>
<p>Auch beim Paging sollte man erst einmal genau darüber nachdenken, bevor man den Code schreibt.
</p>
<ul><li> Generelles
<ul><li> Wir benötigen ein Page-Directory und 1024 Page-Tables, jede 
Tabelle ist 4kb groß. Daraus folgt: 4kb für das Page-Directory, 4MB für 
die Page-Tables
</li></ul>
</li></ul>
<ul><li> Page-Directory initialisieren
<ul><li> Wir müssen die Einträge des Page-Directorys auf die Page-Tables verweisen lassen und die richtigen Flags setzen
</li></ul>
</li></ul>
<ul><li> 4kb-Block (Page) mappen
<ul><li> Eine Routine, die einen 4kb Block physischen Speicher in den 
virtuellen Speicherbreich mappt. Wir übergeben ihr eine physische 
Adresse (der 4kb Block) und eine virtuelle Adresse (wo der Block hin 
soll).
</li></ul>
</li></ul>
<ul><li> Speicherbereich mappen
<ul><li> Eine Routine, die einen Bereich physichen Speicher in den 
virtuellen Adressraum mappt. Sie geht in 4kb Schritten vor und ruft 
unsere "4kb-Block-mappen"-Routine auf. Wir übergeben ihr drei Adressen: 
Wo der Block Speicher beginnt, wo er aufhört, und wo er in den 
virtuellen Adressraum hingemappt werden soll.
</li></ul>
</li></ul>
<ul><li> Page-Directory-Adresse setzen
<ul><li> Eine sehr kleine Routine, die die Adresse des Page-Directory ins <a href="http://www.lowlevel.eu/wiki/Control_Register" title="Control Register"> Register</a> cr3 einträgt, damit die CPU weiß, wo unser Page-Directory liegt
</li></ul>
</li></ul>
<ul><li> Paging aktivieren
<ul><li> Die wohl wichtigste Routine. Wir setzen einfach nur das Paging-Bit im Register cr0 und fertig.
</li></ul>
</li></ul>
<h2> <span class="mw-headline" id="Der_Code"> Der Code </span></h2>
<p>Und nun zum Hauptteil des Tutorials. Auch hier brauchen wir zuerst ein paar Konstanten:
</p>
<pre class="freebasic">&nbsp;
 <span style="color: #808080;">'// constants for all Paging-tables</span>
 <span style="color: #b1b100;">const</span> Page_present = &amp;b1
 <span style="color: #b1b100;">const</span> Page_writeable = &amp;b10
 <span style="color: #b1b100;">const</span> Page_noUsermodeAccess = &amp;b100
 <span style="color: #b1b100;">const</span> Page_noWriteThrough = &amp;b1000
 <span style="color: #b1b100;">const</span> Page_noCache = &amp;b10000
&nbsp;
 <span style="color: #808080;">'// constants only for the PageDirectory</span>
 <span style="color: #b1b100;">const</span> Page_bigPage = &amp;b10000000
&nbsp;
 <span style="color: #808080;">'// constants only for the PageTable</span>
 <span style="color: #b1b100;">const</span> Page_noTLBupdate = &amp;b100000000
&nbsp;</pre>
<p>Die benutzen wir später um die Flags der Tabellen-Einträge zu setzen.
</p>
<pre class="freebasic">&nbsp;
 <span style="color: #b1b100;">dim</span> <span style="color: #b1b100;">shared</span> PageDirectoryPTR <span style="color: #b1b100;">as</span> <span style="color: #b1b100;">UINTEGER</span> <span style="color: #b1b100;">PTR</span> = cast<span style="color: #66cc66;">(</span><span style="color: #b1b100;">UINTEGER</span> <span style="color: #b1b100;">PTR</span>, <span style="color: #cc66cc;">2</span>*<span style="color: #cc66cc;">1024</span>*<span style="color: #cc66cc;">1024</span> - <span style="color: #cc66cc;">4</span>*<span style="color: #cc66cc;">1024</span><span style="color: #66cc66;">)</span> <span style="color: #808080;">'// The PageDirectory lies at 2MB-4kb</span>
 <span style="color: #b1b100;">dim</span> <span style="color: #b1b100;">shared</span> PageTablesPTR <span style="color: #b1b100;">as</span> <span style="color: #b1b100;">UINTEGER</span> <span style="color: #b1b100;">PTR</span> = cast<span style="color: #66cc66;">(</span><span style="color: #b1b100;">UINTEGER</span> <span style="color: #b1b100;">PTR</span>, <span style="color: #cc66cc;">2</span>*<span style="color: #cc66cc;">1024</span>*<span style="color: #cc66cc;">1024</span><span style="color: #66cc66;">)</span>             <span style="color: #808080;">'// The PageTables lie at 2MB</span>
&nbsp;</pre>
<p>Hier setzen wir Pointer, wo die Tabellen später liegen. Warum ich das
 so mache? So kann ich festlegen, das die Tabellen 4kb-aligned sind, und
 muss mich nicht auf irgendwelche seltsamen Memory-Manager verlassen.
</p>
<pre class="freebasic">&nbsp;
 <span style="color: #b1b100;">sub</span> Paging_initDirectory
     <span style="color: #b1b100;">dim</span> counter <span style="color: #b1b100;">as</span> <span style="color: #b1b100;">UINTEGER</span>
     <span style="color: #b1b100;">dim</span> DirectoryPTR <span style="color: #b1b100;">as</span> <span style="color: #b1b100;">UINTEGER</span> <span style="color: #b1b100;">PTR</span> = PageDirectoryPTR
&nbsp;
     <span style="color: #b1b100;">for</span> counter = cast<span style="color: #66cc66;">(</span><span style="color: #b1b100;">UINTEGER</span>, PageTablesPTR<span style="color: #66cc66;">)</span> <span style="color: #b1b100;">to</span> cast<span style="color: #66cc66;">(</span><span style="color: #b1b100;">UINTEGER</span>, PageTablesPTR<span style="color: #66cc66;">)</span><span style="color: #cc66cc;">+4</span>*<span style="color: #cc66cc;">1024</span>*<span style="color: #cc66cc;">1024</span> <span style="color: #b1b100;">step</span> <span style="color: #cc66cc;">4096</span>
         *DirectoryPTR = counter <span style="color: #b1b100;">OR</span> Page_present <span style="color: #b1b100;">OR</span> Page_writeable
         DirectoryPTR += <span style="color: #cc66cc;">1</span>
     <span style="color: #b1b100;">next</span>
 <span style="color: #b1b100;">end</span> <span style="color: #b1b100;">sub</span>
&nbsp;</pre>
<p>Wir setzen hier die Einträge des Page-Directory so, dass sie auf die 
Page-Tables verweisen. Man kann hier sehen, das wir zwei Flags setzen. 
Damit sorgen wie dafür, das wir auf diesen Speicherbereich schreiben 
dürfen, und wie sagen der CPU das der Speicherbereich im physischen 
Speicher liegt, also present ist.
</p>
<pre class="freebasic">&nbsp;
 <span style="color: #b1b100;">sub</span> Paging_map4kb <span style="color: #66cc66;">(</span>vmem <span style="color: #b1b100;">as</span> <span style="color: #b1b100;">UINTEGER</span>, pmem <span style="color: #b1b100;">as</span> <span style="color: #b1b100;">UINTEGER</span><span style="color: #66cc66;">)</span>
     <span style="color: #b1b100;">dim</span> PDentry <span style="color: #b1b100;">as</span> <span style="color: #b1b100;">UINTEGER</span>
     <span style="color: #b1b100;">dim</span> PTentry <span style="color: #b1b100;">as</span> <span style="color: #b1b100;">UINTEGER</span>
&nbsp;
     PDentry = vmem <span style="color: #b1b100;">shr</span> <span style="color: #cc66cc;">22</span>
     PTentry = <span style="color: #66cc66;">(</span>vmem <span style="color: #b1b100;">shl</span> <span style="color: #cc66cc;">10</span><span style="color: #66cc66;">)</span> <span style="color: #b1b100;">shr</span> <span style="color: #cc66cc;">22</span>
&nbsp;
     <span style="color: #808080;">'// no error-checking here. hm.</span>
     *<span style="color: #66cc66;">(</span>PageTablesPTR+PTentry+PDentry*<span style="color: #cc66cc;">1024</span><span style="color: #66cc66;">)</span> = pmem <span style="color: #b1b100;">OR</span> Page_present <span style="color: #b1b100;">OR</span> Page_writeable
 <span style="color: #b1b100;">end</span> <span style="color: #b1b100;">sub</span>
&nbsp;</pre>
<p>Das ist also unsere Routine, die einen 4kb Block in den virtuellen 
Speicher mappt. Wer oben aufgepasst hat, weiß auch, wie wir die Einträge
 der Tabellen berechnen:
</p><p>Wir schieben die Bits um 22 nach rechts, und übrig bleiben die linken 10bit, der Page-Directory-Eintrag.
</p><p>Wir schieben die Bits um 10 nach links 
(Page-Directory-Eintrag-bits fallen weg) und das dann 22 bits nach 
rechts, übrig bleiben die mittleren 10bit, der Page-Table-Eintrag.
</p><p>Auch hier setzen wir ein paar Bits.
</p>
<pre class="freebasic">&nbsp;
 <span style="color: #b1b100;">sub</span> Paging_mapPhysicalMemory <span style="color: #66cc66;">(</span>vstart <span style="color: #b1b100;">as</span> <span style="color: #b1b100;">UINTEGER</span>, pstart <span style="color: #b1b100;">as</span> <span style="color: #b1b100;">UINTEGER</span>, pend <span style="color: #b1b100;">as</span> <span style="color: #b1b100;">UINTEGER</span><span style="color: #66cc66;">)</span>
     <span style="color: #b1b100;">dim</span> vmemPTR <span style="color: #b1b100;">as</span> <span style="color: #b1b100;">UINTEGER</span> = vstart
     <span style="color: #b1b100;">dim</span> pmemPTR <span style="color: #b1b100;">as</span> <span style="color: #b1b100;">UINTEGER</span> = pstart
&nbsp;
     <span style="color: #b1b100;">do</span> <span style="color: #b1b100;">while</span> pmemPTR &lt; pend
         Paging_map4kb <span style="color: #66cc66;">(</span>vmemPTR, pmemPTR<span style="color: #66cc66;">)</span>
         vmemPTR += <span style="color: #cc66cc;">4096</span>
         pmemPTR += <span style="color: #cc66cc;">4096</span>
     <span style="color: #b1b100;">loop</span>
 <span style="color: #b1b100;">end</span> <span style="color: #b1b100;">sub</span>
&nbsp;</pre>
<p>Diese Routine mappt den Speicher von pstart bis pend an die virtuelle
 Adresse vstart. Sie ruft dabei in 4kb-Schritten unsere obige Routine 
auf. Damit können wir große Speicherbereiche schnell und einfach mappen.
</p>
<pre class="freebasic">&nbsp;
 <span style="color: #b1b100;">sub</span> SetPageDirectoryAddress <span style="color: #66cc66;">(</span>address <span style="color: #b1b100;">as</span> <span style="color: #b1b100;">UINTEGER</span> <span style="color: #b1b100;">PTR</span><span style="color: #66cc66;">)</span>
     <span style="color: #808080;">'// we set the address when we write it into cr3</span>
     <span style="color: #b1b100;">ASM</span>
         mov eax, <span style="color: #66cc66;">[</span>address<span style="color: #66cc66;">]</span>                                 <span style="color: #808080;">'// get the address into eax</span>
         mov cr3, eax                                       <span style="color: #808080;">'// get the value of eax into cr3</span>
     <span style="color: #b1b100;">END</span> <span style="color: #b1b100;">ASM</span>
 <span style="color: #b1b100;">end</span> <span style="color: #b1b100;">sub</span>
&nbsp;</pre>
<p>Wir schreiben die Adresse zuerst in eax, und laden den Wert dann nach
 cr3, damit der Prozessor weiß wo unser Page-Directory liegt.
</p>
<pre class="freebasic">&nbsp;
 <span style="color: #b1b100;">sub</span> Paging_activate
     <span style="color: #808080;">'// we activate paging by enabling the last bit of cr0.</span>
     <span style="color: #b1b100;">ASM</span>
         mov eax, cr0                                       <span style="color: #808080;">'// get the value of cr0 into eax</span>
         <span style="color: #b1b100;">or</span> eax, &amp;b10000000000000000000000000000000         <span style="color: #808080;">'// set the bit</span>
         mov cr0, eax                                       <span style="color: #808080;">'// get the new value of eax into cr0</span>
     <span style="color: #b1b100;">END</span> <span style="color: #b1b100;">ASM</span>
 <span style="color: #b1b100;">end</span> <span style="color: #b1b100;">sub</span>
&nbsp;</pre>
<p>Hier holen wir den Inhalt von cr0 nach eax, setzen das Paging-Bit und
 schreiben den neuen Wert zurück. Und schon ist Paging aktiviert!
</p>
<h2> <span class="mw-headline" id="Ein_sehr_kleines_Beispiel"> Ein sehr kleines Beispiel </span></h2>
<p>Als Beispiel zeige ich hier einen Auszug aus meinem Kernel <a href="http://www.lowlevel.eu/wiki/FROST" title="FROST">FROST</a>:
</p>
<pre class="freebasic">&nbsp;
 <span style="color: #b1b100;">print</span> <span style="color: #ff0000;">"Initializing page-directory..."</span>
 Paging_initDirectory
 <span style="color: #b1b100;">print</span> <span style="color: #ff0000;">"Mapping 10MB physical memory..."</span>
 Paging_mapPhysicalMemory <span style="color: #66cc66;">(</span><span style="color: #cc66cc;">0</span>, <span style="color: #cc66cc;">0</span>, <span style="color: #cc66cc;">10</span>*<span style="color: #cc66cc;">1024</span>*<span style="color: #cc66cc;">1024</span><span style="color: #66cc66;">)</span>
 <span style="color: #b1b100;">print</span> <span style="color: #ff0000;">"Setting page-directory address..."</span>
 SetPageDirectoryAddress <span style="color: #66cc66;">(</span>PageDirectoryPTR<span style="color: #66cc66;">)</span>
 <span style="color: #b1b100;">print</span> <span style="color: #ff0000;">"Enabling paging..."</span>
 Paging_activate
&nbsp;</pre>
<p>Das ganze geschieht nach dem initialisieren der IDT und vor dem initialisieren von Multitasking.
</p><p>Wir initialisieren das Page-Directory, mappen die ersten 10MB mit
 identity-mapping (virtuelle Adresse = physische Adresse), setzen die 
Page-Directory-Adresse und schalten Paging ein. Der Kernel merkt gar 
nicht, das er ab jetzt auf virtuellen Speicher zugreift, und läuft 
wunderbar weiter. Sollte er jedoch versuchen, auf Speicher oberhalb der 
10MB zuzugreifen, wird Exception 14 ausgelöst (Page fault).
</p><p>Und da ich hier Multitasking schon erwähnt habe: Es ist zu 
beachten, das wir für jeden Task eigene Tabellen anlegen, und für jeden 
Task das Register cr3 sichern!
</p>
<h2> <span class="mw-headline" id="Abschlie.C3.9Fende_Worte"> Abschließende Worte </span></h2>
<p>Auch das hätten wir geschafft. Obwohl das Thema etwas verzwickt ist, 
hoffe ich, dass dieses Tutorial einen guten Einstieg bietet. Wenn noch 
Fragen offen sind, fragt im Forum oder wendet euch an Mr. Google&nbsp;;)
</p><p>Noch ein Hinweis: Der Code stammt aus meinem Kernel, den ihr hier finden könnt: <a href="http://sourceforge.net/projects/frostkernel" class="external free" rel="nofollow">http://sourceforge.net/projects/frostkernel</a>
</p><p>Happy Coding,
TheThing
</p><p><br>
</p>
<h2> <span class="mw-headline" id="Links"> Links </span></h2>
<p><a href="http://www.fh-zwickau.de/doc/prmo/pmtutor/text/" class="external text" rel="nofollow">Protected-Mode Tutorial der FH-Zwickau</a>
</p>
<!-- 
NewPP limit report
Preprocessor node count: 95/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key lowlevel_wiki:pcache:idhash:1850-0!*!0!!de!*!edit=0 and timestamp 20130611155414 -->
<div class="printfooter">
Von „<a href="http://www.lowlevel.eu/wiki/Paging_Tutorial">http://www.lowlevel.eu/wiki/Paging_Tutorial</a>“</div>
		<div id="catlinks" class="catlinks"><div id="mw-normal-catlinks"><a href="http://www.lowlevel.eu/wiki/Spezial:Kategorien" title="Spezial:Kategorien">Kategorien</a>: <span dir="ltr"><a href="http://www.lowlevel.eu/wiki/Kategorie:Tutorials" title="Kategorie:Tutorials">Tutorials</a></span> | <span dir="ltr"><a href="http://www.lowlevel.eu/wiki/Kategorie:Speicherverwaltung" title="Kategorie:Speicherverwaltung">Speicherverwaltung</a></span></div></div>		<!-- end content -->
				<div class="visualClear"></div>
	</div>
</div></div>
<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Ansichten</h5>
		<div class="pBody">
			<ul>
				 <li id="ca-nstab-main" class="selected"><a href="http://www.lowlevel.eu/wiki/Paging_Tutorial" title="Seiteninhalt anzeigen [alt-shift-c]" accesskey="c">Seite</a></li>
				 <li id="ca-talk" class="new"><a href="http://www.lowlevel.eu/w/index.php?title=Diskussion:Paging_Tutorial&amp;action=edit&amp;redlink=1" title="Diskussion zum Seiteninhalt [alt-shift-t]" accesskey="t">Diskussion</a></li>
				 <li id="ca-viewsource"><a href="http://www.lowlevel.eu/w/index.php?title=Paging_Tutorial&amp;action=edit" title="Diese Seite ist geschützt. Der Quelltext kann angesehen werden. [alt-shift-e]" accesskey="e">Quelltext anzeigen</a></li>
				 <li id="ca-history"><a href="http://www.lowlevel.eu/w/index.php?title=Paging_Tutorial&amp;action=history" title="Frühere Versionen dieser Seite [alt-shift-h]" accesskey="h">Versionen/Autoren</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Meine Werkzeuge</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="http://www.lowlevel.eu/w/index.php?title=Spezial:Anmelden&amp;returnto=Paging%20Tutorial" title="Sich anzumelden wird zwar gerne gesehen, ist aber keine Pflicht. [alt-shift-o]" accesskey="o">Anmelden</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(/wiki.png);" href="http://www.lowlevel.eu/wiki/Hauptseite" title="Hauptseite"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class="generated-sidebar portlet" id="p-navigation">
		<h5>Navigation</h5>
		<div class="pBody">
			<ul>
				<li id="n-mainpage"><a href="http://www.lowlevel.eu/wiki/Hauptseite" title="Hauptseite anzeigen [alt-shift-z]" accesskey="z">Hauptseite</a></li>
				<li id="n-Lowlevel-Portal"><a href="http://www.lowlevel.eu/wiki/Lowlevel:Portal">Lowlevel-Portal</a></li>
				<li id="n-Lowlevel-Forum"><a href="http://forum.lowlevel.eu/">Lowlevel-Forum</a></li>
				<li id="n-recentchanges"><a href="http://www.lowlevel.eu/wiki/Spezial:Letzte_%C3%84nderungen" title="Liste der letzten Änderungen in Lowlevel [alt-shift-r]" accesskey="r">Letzte Änderungen</a></li>
				<li id="n-Zuf.C3.A4llige-Seite"><a href="http://www.lowlevel.eu/wiki/Spezial:Zuf%C3%A4llige_Seite">Zufällige Seite</a></li>
				<li id="n-Wiki-Crashkurs"><a href="http://www.lowlevel.eu/wiki/Wiki-Crashkurs">Wiki-Crashkurs</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Suche</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform">
				<input name="title" value="Spezial:Suche" type="hidden">
				<input autocomplete="off" id="searchInput" title="Lowlevel durchsuchen" accesskey="f" name="search" type="search">
				<input name="go" class="searchButton" id="searchGoButton" value="Seite" title="Gehe direkt zu der Seite, die exakt dem eingegebenen Namen entspricht." type="submit">&nbsp;
				<input name="fulltext" class="searchButton" id="mw-searchButton" value="Suchen" title="Suche nach Seiten, die diesen Text enthalten" type="submit">
			</form>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Werkzeuge</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="http://www.lowlevel.eu/wiki/Spezial:Linkliste/Paging_Tutorial" title="Liste aller Seiten, die hierher verlinken [alt-shift-j]" accesskey="j">Links auf diese Seite</a></li>
				<li id="t-recentchangeslinked"><a href="http://www.lowlevel.eu/wiki/Spezial:%C3%84nderungen_an_verlinkten_Seiten/Paging_Tutorial" title="Letzte Änderungen an Seiten, die von hier verlinkt sind [alt-shift-k]" accesskey="k">Änderungen an verlinkten Seiten</a></li>
<li id="t-specialpages"><a href="http://www.lowlevel.eu/wiki/Spezial:Spezialseiten" title="Liste aller Spezialseiten [alt-shift-q]" accesskey="q">Spezialseiten</a></li>
				<li id="t-print"><a href="http://www.lowlevel.eu/w/index.php?title=Paging_Tutorial&amp;printable=yes" rel="alternate" title="Druckansicht dieser Seite [alt-shift-p]" accesskey="p">Druckversion</a></li>				<li id="t-permalink"><a href="http://www.lowlevel.eu/w/index.php?title=Paging_Tutorial&amp;oldid=6880" title="Dauerhafter Link zu dieser Seitenversion">Permanenter Link</a></li><li id="t-pdf">
<a href="http://www.lowlevel.eu/w/index.php?title=Spezial:Pdfprint&amp;page=Paging_Tutorial">Als PDF ausgeben</a></li>			</ul>
		</div>
	</div>
</div><!-- end of the left (by default at least) column -->
<div class="visualClear"></div>
<div id="footer">
	<div id="f-copyrightico">
		<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/de/"><img src="Paging%20Tutorial%20%13%20Lowlevel_files/88x31.png" alt="Namensnennung - Keine kommerzielle Nutzung - Weitergabe unter gleichen Bedingungen 3.0 Deutschland" height="31" width="88"></a>
	</div>
	<div id="f-poweredbyico">
		<a href="http://www.mediawiki.org/"><img src="Paging%20Tutorial%20%13%20Lowlevel_files/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" height="31" width="88"></a>
	</div>
	<ul id="f-list">
		<li id="lastmod"> Diese Seite wurde zuletzt am 11. Januar 2010 um 09:26 Uhr geändert.</li>
		<li id="viewcount">Diese Seite wurde bisher 3.455-mal abgerufen.</li>
		<li id="copyright">Der Inhalt ist verfügbar unter der Lizenz <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/de/" class="external ">Namensnennung - Keine kommerzielle Nutzung - Weitergabe unter gleichen Bedingungen 3.0 Deutschland</a>.</li>
		<li id="privacy"><a href="http://www.lowlevel.eu/wiki/Lowlevel:Datenschutz" title="Lowlevel:Datenschutz">Datenschutz</a></li>
		<li id="about"><a href="http://www.lowlevel.eu/wiki/Lowlevel:%C3%9Cber" title="Lowlevel:Über">Über Lowlevel</a></li>
		<li id="disclaimer"><a href="http://www.lowlevel.eu/wiki/Lowlevel:Impressum" title="Lowlevel:Impressum">Impressum</a></li>
	</ul>
</div>
</div>

<script src="Paging%20Tutorial%20%13%20Lowlevel_files/load_003.php"></script><script src="Paging%20Tutorial%20%13%20Lowlevel_files/load.php"></script>
<script>if ( window.mediaWiki ) {
	mediaWiki.config.set({"wgCanonicalNamespace": "", "wgCanonicalSpecialPageName": false, "wgNamespaceNumber": 0, "wgPageName": "Paging_Tutorial", "wgTitle": "Paging Tutorial", "wgAction": "view", "wgArticleId": 1850, "wgIsArticle": true, "wgUserName": null, "wgUserGroups": ["*"], "wgCurRevisionId": 6880, "wgCategories": ["Tutorials", "Speicherverwaltung"], "wgBreakFrames": false, "wgRestrictionEdit": [], "wgRestrictionMove": [], "wgSearchNamespaces": [0]});
}
</script>
<script>if ( window.mediaWiki ) {
	mediaWiki.loader.load(["mediawiki.util", "mediawiki.legacy.wikibits", "mediawiki.legacy.ajax", "mediawiki.legacy.mwsuggest"]);
	mediaWiki.loader.go();
}
</script><script type="text/javascript" src="Paging%20Tutorial%20%13%20Lowlevel_files/load_004.php"></script>

<script src="Paging%20Tutorial%20%13%20Lowlevel_files/load_002.php"></script>
<script>if ( window.mediaWiki ) {
	mediaWiki.user.options.set({"ccmeonemails":0,"cols":80,"contextchars":50,"contextlines":5,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"monobook","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,
	"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"de","language":"de","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;mediaWiki.loader.state({"user.options":"ready"});
}
</script><!-- Served in 0.245 secs. --></body></html>